// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `FriendService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                public partial class FriendInfo : _System.ICloneable
                {
                    #region Slice data members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public es.upm.fi.rmi.CharacterProfile characterInfo;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public byte flagOnline;

                    #endregion

                    #region Constructors

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public FriendInfo()
                    {
                        characterInfo = new es.upm.fi.rmi.CharacterProfile();
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public FriendInfo(es.upm.fi.rmi.CharacterProfile characterInfo, byte flagOnline)
                    {
                        this.characterInfo = characterInfo;
                        this.flagOnline = flagOnline;
                    }

                    #endregion

                    #region ICloneable members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public object Clone()
                    {
                        return MemberwiseClone();
                    }

                    #endregion

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = 5381;
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::FriendInfo");
                        IceInternal.HashUtil.hashAdd(ref h__, characterInfo);
                        IceInternal.HashUtil.hashAdd(ref h__, flagOnline);
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(object.ReferenceEquals(this, other__))
                        {
                            return true;
                        }
                        if(other__ == null)
                        {
                            return false;
                        }
                        if(GetType() != other__.GetType())
                        {
                            return false;
                        }
                        FriendInfo o__ = (FriendInfo)other__;
                        if(characterInfo == null)
                        {
                            if(o__.characterInfo != null)
                            {
                                return false;
                            }
                        }
                        else
                        {
                            if(!characterInfo.Equals(o__.characterInfo))
                            {
                                return false;
                            }
                        }
                        if(!flagOnline.Equals(o__.flagOnline))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(FriendInfo lhs__, FriendInfo rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(FriendInfo lhs__, FriendInfo rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshalling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public void write__(IceInternal.BasicStream os__)
                    {
                        es.upm.fi.rmi.CharacterProfile.write__(os__, characterInfo);
                        os__.writeByte(flagOnline);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public void read__(IceInternal.BasicStream is__)
                    {
                        characterInfo = es.upm.fi.rmi.CharacterProfile.read__(is__, characterInfo);
                        flagOnline = is__.readByte();
                    }
                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static void write__(IceInternal.BasicStream os__, FriendInfo v__)
                    {
                        if(v__ == null)
                        {
                            nullMarshalValue__.write__(os__);
                        }
                        else
                        {
                            v__.write__(os__);
                        }
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static FriendInfo read__(IceInternal.BasicStream is__, FriendInfo v__)
                    {
                        if(v__ == null)
                        {
                            v__ = new FriendInfo();
                        }
                        v__.read__(is__);
                        return v__;
                    }
                    
                    private static readonly FriendInfo nullMarshalValue__ = new FriendInfo();

                    #endregion
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
                public partial class FriendException : es.upm.fi.rmi.PaseoException
                {
                    #region Constructors

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public FriendException()
                    {
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public FriendException(_System.Exception ex__) : base(ex__)
                    {
                    }
#if !SILVERLIGHT

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public FriendException(_System.Runtime.Serialization.SerializationInfo info__, _System.Runtime.Serialization.StreamingContext context__) : base(info__, context__)
                    {
                    }
#endif

                    #endregion

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override string ice_name()
                    {
                        return "es::upm::fi::rmi::FriendException";
                    }

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = base.GetHashCode();
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::FriendException");
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(other__ == null)
                        {
                            return false;
                        }
                        if(object.ReferenceEquals(this, other__))
                        {
                            return true;
                        }
                        FriendException o__ = other__ as FriendException;
                        if(o__ == null)
                        {
                            return false;
                        }
                        if(!base.Equals(other__))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(FriendException lhs__, FriendException rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(FriendException lhs__, FriendException rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshaling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void writeImpl__(IceInternal.BasicStream os__)
                    {
                        os__.startWriteSlice("::es::upm::fi::rmi::FriendException", -1, false);
                        os__.endWriteSlice();
                        base.writeImpl__(os__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void readImpl__(IceInternal.BasicStream is__)
                    {
                        is__.startReadSlice();
                        is__.endReadSlice();
                        base.readImpl__(is__);
                    }

                    #endregion
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
                public partial class FriendHasAlreadyExisted : es.upm.fi.rmi.FriendException
                {
                    #region Constructors

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public FriendHasAlreadyExisted()
                    {
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public FriendHasAlreadyExisted(_System.Exception ex__) : base(ex__)
                    {
                    }
#if !SILVERLIGHT

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public FriendHasAlreadyExisted(_System.Runtime.Serialization.SerializationInfo info__, _System.Runtime.Serialization.StreamingContext context__) : base(info__, context__)
                    {
                    }
#endif

                    #endregion

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override string ice_name()
                    {
                        return "es::upm::fi::rmi::FriendHasAlreadyExisted";
                    }

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = base.GetHashCode();
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::FriendHasAlreadyExisted");
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(other__ == null)
                        {
                            return false;
                        }
                        if(object.ReferenceEquals(this, other__))
                        {
                            return true;
                        }
                        FriendHasAlreadyExisted o__ = other__ as FriendHasAlreadyExisted;
                        if(o__ == null)
                        {
                            return false;
                        }
                        if(!base.Equals(other__))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(FriendHasAlreadyExisted lhs__, FriendHasAlreadyExisted rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(FriendHasAlreadyExisted lhs__, FriendHasAlreadyExisted rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshaling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void writeImpl__(IceInternal.BasicStream os__)
                    {
                        os__.startWriteSlice("::es::upm::fi::rmi::FriendHasAlreadyExisted", -1, false);
                        os__.endWriteSlice();
                        base.writeImpl__(os__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void readImpl__(IceInternal.BasicStream is__)
                    {
                        is__.startReadSlice();
                        is__.endReadSlice();
                        base.readImpl__(is__);
                    }

                    #endregion
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
                public partial interface FriendService : Ice.Object, FriendServiceOperations_, FriendServiceOperationsNC_
                {
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_FriendService_GetFriendList(es.upm.fi.rmi.FriendInfo[] ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_FriendService_GetBlackList(es.upm.fi.rmi.FriendInfo[] ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_FriendService_AddFriendById();

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_FriendService_AddFriendByName();

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_FriendService_DeleteFriend(bool ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_FriendService_GetIdleFriendList(es.upm.fi.rmi.FriendInfo[] ret__);
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface FriendServicePrx : Ice.ObjectPrx
                {
                    es.upm.fi.rmi.FriendInfo[] GetFriendList(int characterId);

                    es.upm.fi.rmi.FriendInfo[] GetFriendList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetFriendList> begin_GetFriendList(int characterId);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetFriendList> begin_GetFriendList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_GetFriendList(int characterId, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_GetFriendList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    es.upm.fi.rmi.FriendInfo[] end_GetFriendList(Ice.AsyncResult r__);

                    es.upm.fi.rmi.FriendInfo[] GetBlackList(int characterId);

                    es.upm.fi.rmi.FriendInfo[] GetBlackList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetBlackList> begin_GetBlackList(int characterId);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetBlackList> begin_GetBlackList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_GetBlackList(int characterId, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_GetBlackList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    es.upm.fi.rmi.FriendInfo[] end_GetBlackList(Ice.AsyncResult r__);

                    void AddFriendById(int characterId, int friCharacterId, int relationType);

                    void AddFriendById(int characterId, int friCharacterId, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_AddFriendById> begin_AddFriendById(int characterId, int friCharacterId, int relationType);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_AddFriendById> begin_AddFriendById(int characterId, int friCharacterId, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_AddFriendById(int characterId, int friCharacterId, int relationType, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_AddFriendById(int characterId, int friCharacterId, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    void end_AddFriendById(Ice.AsyncResult r__);

                    void AddFriendByName(int cid, string frdName, int relationType);

                    void AddFriendByName(int cid, string frdName, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_AddFriendByName> begin_AddFriendByName(int cid, string frdName, int relationType);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_AddFriendByName> begin_AddFriendByName(int cid, string frdName, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_AddFriendByName(int cid, string frdName, int relationType, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_AddFriendByName(int cid, string frdName, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    void end_AddFriendByName(Ice.AsyncResult r__);

                    bool DeleteFriend(long sid, int frdCid, int relationType);

                    bool DeleteFriend(long sid, int frdCid, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_DeleteFriend> begin_DeleteFriend(long sid, int frdCid, int relationType);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_DeleteFriend> begin_DeleteFriend(long sid, int frdCid, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_DeleteFriend(long sid, int frdCid, int relationType, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_DeleteFriend(long sid, int frdCid, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    bool end_DeleteFriend(Ice.AsyncResult r__);

                    es.upm.fi.rmi.FriendInfo[] GetIdleFriendList(long sid);

                    es.upm.fi.rmi.FriendInfo[] GetIdleFriendList(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetIdleFriendList> begin_GetIdleFriendList(long sid);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetIdleFriendList> begin_GetIdleFriendList(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_GetIdleFriendList(long sid, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_GetIdleFriendList(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    es.upm.fi.rmi.FriendInfo[] end_GetIdleFriendList(Ice.AsyncResult r__);
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface FriendServiceOperations_
                {
                    es.upm.fi.rmi.FriendInfo[] GetFriendList(int characterId, Ice.Current current__);

                    es.upm.fi.rmi.FriendInfo[] GetBlackList(int characterId, Ice.Current current__);

                    void AddFriendById(int characterId, int friCharacterId, int relationType, Ice.Current current__);

                    void AddFriendByName(int cid, string frdName, int relationType, Ice.Current current__);

                    bool DeleteFriend(long sid, int frdCid, int relationType, Ice.Current current__);

                    es.upm.fi.rmi.FriendInfo[] GetIdleFriendList(long sid, Ice.Current current__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface FriendServiceOperationsNC_
                {
                    es.upm.fi.rmi.FriendInfo[] GetFriendList(int characterId);

                    es.upm.fi.rmi.FriendInfo[] GetBlackList(int characterId);

                    void AddFriendById(int characterId, int friCharacterId, int relationType);

                    void AddFriendByName(int cid, string frdName, int relationType);

                    bool DeleteFriend(long sid, int frdCid, int relationType);

                    es.upm.fi.rmi.FriendInfo[] GetIdleFriendList(long sid);
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public sealed class FriendInfoSeqHelper
                {
                    public static void write(IceInternal.BasicStream os__, es.upm.fi.rmi.FriendInfo[] v__)
                    {
                        if(v__ == null)
                        {
                            os__.writeSize(0);
                        }
                        else
                        {
                            os__.writeSize(v__.Length);
                            for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                            {
                                (v__[ix__] == null ? new es.upm.fi.rmi.FriendInfo() : v__[ix__]).write__(os__);
                            }
                        }
                    }

                    public static es.upm.fi.rmi.FriendInfo[] read(IceInternal.BasicStream is__)
                    {
                        es.upm.fi.rmi.FriendInfo[] v__;
                        {
                            int szx__ = is__.readAndCheckSeqSize(8);
                            v__ = new es.upm.fi.rmi.FriendInfo[szx__];
                            for(int ix__ = 0; ix__ < szx__; ++ix__)
                            {
                                v__[ix__] = new es.upm.fi.rmi.FriendInfo();
                                v__[ix__].read__(is__);
                            }
                        }
                        return v__;
                    }
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public sealed class FriendServicePrxHelper : Ice.ObjectPrxHelperBase, FriendServicePrx
                {
                    #region Synchronous operations

                    public void AddFriendById(int characterId, int friCharacterId, int relationType)
                    {
                        this.AddFriendById(characterId, friCharacterId, relationType, null, false);
                    }

                    public void AddFriendById(int characterId, int friCharacterId, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        this.AddFriendById(characterId, friCharacterId, relationType, ctx__, true);
                    }

                    private void AddFriendById(int characterId, int friCharacterId, int relationType, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__AddFriendById_name);
                        end_AddFriendById(begin_AddFriendById(characterId, friCharacterId, relationType, context__, explicitCtx__, true, null, null));
                    }

                    public void AddFriendByName(int cid, string frdName, int relationType)
                    {
                        this.AddFriendByName(cid, frdName, relationType, null, false);
                    }

                    public void AddFriendByName(int cid, string frdName, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        this.AddFriendByName(cid, frdName, relationType, ctx__, true);
                    }

                    private void AddFriendByName(int cid, string frdName, int relationType, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__AddFriendByName_name);
                        end_AddFriendByName(begin_AddFriendByName(cid, frdName, relationType, context__, explicitCtx__, true, null, null));
                    }

                    public bool DeleteFriend(long sid, int frdCid, int relationType)
                    {
                        return this.DeleteFriend(sid, frdCid, relationType, null, false);
                    }

                    public bool DeleteFriend(long sid, int frdCid, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.DeleteFriend(sid, frdCid, relationType, ctx__, true);
                    }

                    private bool DeleteFriend(long sid, int frdCid, int relationType, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__DeleteFriend_name);
                        return end_DeleteFriend(begin_DeleteFriend(sid, frdCid, relationType, context__, explicitCtx__, true, null, null));
                    }

                    public es.upm.fi.rmi.FriendInfo[] GetBlackList(int characterId)
                    {
                        return this.GetBlackList(characterId, null, false);
                    }

                    public es.upm.fi.rmi.FriendInfo[] GetBlackList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.GetBlackList(characterId, ctx__, true);
                    }

                    private es.upm.fi.rmi.FriendInfo[] GetBlackList(int characterId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__GetBlackList_name);
                        return end_GetBlackList(begin_GetBlackList(characterId, context__, explicitCtx__, true, null, null));
                    }

                    public es.upm.fi.rmi.FriendInfo[] GetFriendList(int characterId)
                    {
                        return this.GetFriendList(characterId, null, false);
                    }

                    public es.upm.fi.rmi.FriendInfo[] GetFriendList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.GetFriendList(characterId, ctx__, true);
                    }

                    private es.upm.fi.rmi.FriendInfo[] GetFriendList(int characterId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__GetFriendList_name);
                        return end_GetFriendList(begin_GetFriendList(characterId, context__, explicitCtx__, true, null, null));
                    }

                    public es.upm.fi.rmi.FriendInfo[] GetIdleFriendList(long sid)
                    {
                        return this.GetIdleFriendList(sid, null, false);
                    }

                    public es.upm.fi.rmi.FriendInfo[] GetIdleFriendList(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.GetIdleFriendList(sid, ctx__, true);
                    }

                    private es.upm.fi.rmi.FriendInfo[] GetIdleFriendList(long sid, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__GetIdleFriendList_name);
                        return end_GetIdleFriendList(begin_GetIdleFriendList(sid, context__, explicitCtx__, true, null, null));
                    }

                    #endregion

                    #region Asynchronous operations

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_AddFriendById> begin_AddFriendById(int characterId, int friCharacterId, int relationType)
                    {
                        return begin_AddFriendById(characterId, friCharacterId, relationType, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_AddFriendById> begin_AddFriendById(int characterId, int friCharacterId, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_AddFriendById(characterId, friCharacterId, relationType, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_AddFriendById(int characterId, int friCharacterId, int relationType, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_AddFriendById(characterId, friCharacterId, relationType, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_AddFriendById(int characterId, int friCharacterId, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_AddFriendById(characterId, friCharacterId, relationType, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __AddFriendById_name = "AddFriendById";

                    public void end_AddFriendById(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __AddFriendById_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(es.upm.fi.rmi.PaseoException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            outAsync__.readEmptyParams();
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_AddFriendById> begin_AddFriendById(int characterId, int friCharacterId, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__AddFriendById_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_AddFriendById> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_AddFriendById>(__AddFriendById_name, AddFriendById_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__AddFriendById_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(characterId);
                            os__.writeInt(friCharacterId);
                            os__.writeInt(relationType);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void AddFriendById_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_FriendService_AddFriendById cb__, Ice.ExceptionCallback excb__)
                    {
                        try
                        {
                            end_AddFriendById(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__();
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_AddFriendByName> begin_AddFriendByName(int cid, string frdName, int relationType)
                    {
                        return begin_AddFriendByName(cid, frdName, relationType, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_AddFriendByName> begin_AddFriendByName(int cid, string frdName, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_AddFriendByName(cid, frdName, relationType, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_AddFriendByName(int cid, string frdName, int relationType, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_AddFriendByName(cid, frdName, relationType, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_AddFriendByName(int cid, string frdName, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_AddFriendByName(cid, frdName, relationType, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __AddFriendByName_name = "AddFriendByName";

                    public void end_AddFriendByName(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __AddFriendByName_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(es.upm.fi.rmi.PaseoException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            outAsync__.readEmptyParams();
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_AddFriendByName> begin_AddFriendByName(int cid, string frdName, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__AddFriendByName_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_AddFriendByName> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_AddFriendByName>(__AddFriendByName_name, AddFriendByName_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__AddFriendByName_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(cid);
                            os__.writeString(frdName);
                            os__.writeInt(relationType);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void AddFriendByName_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_FriendService_AddFriendByName cb__, Ice.ExceptionCallback excb__)
                    {
                        try
                        {
                            end_AddFriendByName(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__();
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_DeleteFriend> begin_DeleteFriend(long sid, int frdCid, int relationType)
                    {
                        return begin_DeleteFriend(sid, frdCid, relationType, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_DeleteFriend> begin_DeleteFriend(long sid, int frdCid, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_DeleteFriend(sid, frdCid, relationType, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_DeleteFriend(long sid, int frdCid, int relationType, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_DeleteFriend(sid, frdCid, relationType, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_DeleteFriend(long sid, int frdCid, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_DeleteFriend(sid, frdCid, relationType, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __DeleteFriend_name = "DeleteFriend";

                    public bool end_DeleteFriend(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __DeleteFriend_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(es.upm.fi.rmi.PaseoException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            bool ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = is__.readBool();
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_DeleteFriend> begin_DeleteFriend(long sid, int frdCid, int relationType, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__DeleteFriend_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_DeleteFriend> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_DeleteFriend>(__DeleteFriend_name, DeleteFriend_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__DeleteFriend_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            os__.writeInt(frdCid);
                            os__.writeInt(relationType);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void DeleteFriend_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_FriendService_DeleteFriend cb__, Ice.ExceptionCallback excb__)
                    {
                        bool ret__;
                        try
                        {
                            ret__ = end_DeleteFriend(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetBlackList> begin_GetBlackList(int characterId)
                    {
                        return begin_GetBlackList(characterId, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetBlackList> begin_GetBlackList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_GetBlackList(characterId, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_GetBlackList(int characterId, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetBlackList(characterId, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_GetBlackList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetBlackList(characterId, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __GetBlackList_name = "GetBlackList";

                    public es.upm.fi.rmi.FriendInfo[] end_GetBlackList(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __GetBlackList_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            es.upm.fi.rmi.FriendInfo[] ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = es.upm.fi.rmi.FriendInfoSeqHelper.read(is__);
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetBlackList> begin_GetBlackList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__GetBlackList_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_GetBlackList> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_GetBlackList>(__GetBlackList_name, GetBlackList_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__GetBlackList_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(characterId);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void GetBlackList_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_FriendService_GetBlackList cb__, Ice.ExceptionCallback excb__)
                    {
                        es.upm.fi.rmi.FriendInfo[] ret__;
                        try
                        {
                            ret__ = end_GetBlackList(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetFriendList> begin_GetFriendList(int characterId)
                    {
                        return begin_GetFriendList(characterId, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetFriendList> begin_GetFriendList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_GetFriendList(characterId, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_GetFriendList(int characterId, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetFriendList(characterId, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_GetFriendList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetFriendList(characterId, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __GetFriendList_name = "GetFriendList";

                    public es.upm.fi.rmi.FriendInfo[] end_GetFriendList(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __GetFriendList_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            es.upm.fi.rmi.FriendInfo[] ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = es.upm.fi.rmi.FriendInfoSeqHelper.read(is__);
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetFriendList> begin_GetFriendList(int characterId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__GetFriendList_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_GetFriendList> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_GetFriendList>(__GetFriendList_name, GetFriendList_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__GetFriendList_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeInt(characterId);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void GetFriendList_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_FriendService_GetFriendList cb__, Ice.ExceptionCallback excb__)
                    {
                        es.upm.fi.rmi.FriendInfo[] ret__;
                        try
                        {
                            ret__ = end_GetFriendList(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetIdleFriendList> begin_GetIdleFriendList(long sid)
                    {
                        return begin_GetIdleFriendList(sid, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetIdleFriendList> begin_GetIdleFriendList(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_GetIdleFriendList(sid, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_GetIdleFriendList(long sid, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetIdleFriendList(sid, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_GetIdleFriendList(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetIdleFriendList(sid, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __GetIdleFriendList_name = "GetIdleFriendList";

                    public es.upm.fi.rmi.FriendInfo[] end_GetIdleFriendList(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __GetIdleFriendList_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(es.upm.fi.rmi.PaseoException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            es.upm.fi.rmi.FriendInfo[] ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = es.upm.fi.rmi.FriendInfoSeqHelper.read(is__);
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_FriendService_GetIdleFriendList> begin_GetIdleFriendList(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__GetIdleFriendList_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_GetIdleFriendList> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_FriendService_GetIdleFriendList>(__GetIdleFriendList_name, GetIdleFriendList_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__GetIdleFriendList_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void GetIdleFriendList_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_FriendService_GetIdleFriendList cb__, Ice.ExceptionCallback excb__)
                    {
                        es.upm.fi.rmi.FriendInfo[] ret__;
                        try
                        {
                            ret__ = end_GetIdleFriendList(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    #endregion

                    #region Checked and unchecked cast operations

                    public static FriendServicePrx checkedCast(Ice.ObjectPrx b)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        FriendServicePrx r = b as FriendServicePrx;
                        if((r == null) && b.ice_isA(ice_staticId()))
                        {
                            FriendServicePrxHelper h = new FriendServicePrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static FriendServicePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        FriendServicePrx r = b as FriendServicePrx;
                        if((r == null) && b.ice_isA(ice_staticId(), ctx))
                        {
                            FriendServicePrxHelper h = new FriendServicePrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static FriendServicePrx checkedCast(Ice.ObjectPrx b, string f)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        try
                        {
                            if(bb.ice_isA(ice_staticId()))
                            {
                                FriendServicePrxHelper h = new FriendServicePrxHelper();
                                h.copyFrom__(bb);
                                return h;
                            }
                        }
                        catch(Ice.FacetNotExistException)
                        {
                        }
                        return null;
                    }

                    public static FriendServicePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        try
                        {
                            if(bb.ice_isA(ice_staticId(), ctx))
                            {
                                FriendServicePrxHelper h = new FriendServicePrxHelper();
                                h.copyFrom__(bb);
                                return h;
                            }
                        }
                        catch(Ice.FacetNotExistException)
                        {
                        }
                        return null;
                    }

                    public static FriendServicePrx uncheckedCast(Ice.ObjectPrx b)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        FriendServicePrx r = b as FriendServicePrx;
                        if(r == null)
                        {
                            FriendServicePrxHelper h = new FriendServicePrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static FriendServicePrx uncheckedCast(Ice.ObjectPrx b, string f)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        FriendServicePrxHelper h = new FriendServicePrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }

                    public static readonly string[] ids__ =
                    {
                        "::Ice::Object",
                        "::es::upm::fi::rmi::FriendService"
                    };

                    public static string ice_staticId()
                    {
                        return ids__[1];
                    }

                    #endregion

                    #region Marshaling support

                    public static void write__(IceInternal.BasicStream os__, FriendServicePrx v__)
                    {
                        os__.writeProxy(v__);
                    }

                    public static FriendServicePrx read__(IceInternal.BasicStream is__)
                    {
                        Ice.ObjectPrx proxy = is__.readProxy();
                        if(proxy != null)
                        {
                            FriendServicePrxHelper result = new FriendServicePrxHelper();
                            result.copyFrom__(proxy);
                            return result;
                        }
                        return null;
                    }

                    #endregion
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public abstract class FriendServiceDisp_ : Ice.ObjectImpl, FriendService
                {
                    #region Slice operations

                    public es.upm.fi.rmi.FriendInfo[] GetFriendList(int characterId)
                    {
                        return GetFriendList(characterId, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract es.upm.fi.rmi.FriendInfo[] GetFriendList(int characterId, Ice.Current current__);

                    public es.upm.fi.rmi.FriendInfo[] GetBlackList(int characterId)
                    {
                        return GetBlackList(characterId, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract es.upm.fi.rmi.FriendInfo[] GetBlackList(int characterId, Ice.Current current__);

                    public void AddFriendById(int characterId, int friCharacterId, int relationType)
                    {
                        AddFriendById(characterId, friCharacterId, relationType, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract void AddFriendById(int characterId, int friCharacterId, int relationType, Ice.Current current__);

                    public void AddFriendByName(int cid, string frdName, int relationType)
                    {
                        AddFriendByName(cid, frdName, relationType, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract void AddFriendByName(int cid, string frdName, int relationType, Ice.Current current__);

                    public bool DeleteFriend(long sid, int frdCid, int relationType)
                    {
                        return DeleteFriend(sid, frdCid, relationType, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract bool DeleteFriend(long sid, int frdCid, int relationType, Ice.Current current__);

                    public es.upm.fi.rmi.FriendInfo[] GetIdleFriendList(long sid)
                    {
                        return GetIdleFriendList(sid, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract es.upm.fi.rmi.FriendInfo[] GetIdleFriendList(long sid, Ice.Current current__);

                    #endregion

                    #region Slice type-related members

                    public static new readonly string[] ids__ = 
                    {
                        "::Ice::Object",
                        "::es::upm::fi::rmi::FriendService"
                    };

                    public override bool ice_isA(string s)
                    {
                        return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                    }

                    public override bool ice_isA(string s, Ice.Current current__)
                    {
                        return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                    }

                    public override string[] ice_ids()
                    {
                        return ids__;
                    }

                    public override string[] ice_ids(Ice.Current current__)
                    {
                        return ids__;
                    }

                    public override string ice_id()
                    {
                        return ids__[1];
                    }

                    public override string ice_id(Ice.Current current__)
                    {
                        return ids__[1];
                    }

                    public static new string ice_staticId()
                    {
                        return ids__[1];
                    }

                    #endregion

                    #region Operation dispatch

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus GetFriendList___(FriendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        int characterId;
                        characterId = is__.readInt();
                        inS__.endReadParams();
                        es.upm.fi.rmi.FriendInfo[] ret__ = obj__.GetFriendList(characterId, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        es.upm.fi.rmi.FriendInfoSeqHelper.write(os__, ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus GetBlackList___(FriendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        int characterId;
                        characterId = is__.readInt();
                        inS__.endReadParams();
                        es.upm.fi.rmi.FriendInfo[] ret__ = obj__.GetBlackList(characterId, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        es.upm.fi.rmi.FriendInfoSeqHelper.write(os__, ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus AddFriendById___(FriendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        int characterId;
                        int friCharacterId;
                        int relationType;
                        characterId = is__.readInt();
                        friCharacterId = is__.readInt();
                        relationType = is__.readInt();
                        inS__.endReadParams();
                        try
                        {
                            obj__.AddFriendById(characterId, friCharacterId, relationType, current__);
                            inS__.writeEmptyParams__();
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(es.upm.fi.rmi.PaseoException ex__)
                        {
                            inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus AddFriendByName___(FriendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        int cid;
                        string frdName;
                        int relationType;
                        cid = is__.readInt();
                        frdName = is__.readString();
                        relationType = is__.readInt();
                        inS__.endReadParams();
                        try
                        {
                            obj__.AddFriendByName(cid, frdName, relationType, current__);
                            inS__.writeEmptyParams__();
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(es.upm.fi.rmi.PaseoException ex__)
                        {
                            inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus DeleteFriend___(FriendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        int frdCid;
                        int relationType;
                        sid = is__.readLong();
                        frdCid = is__.readInt();
                        relationType = is__.readInt();
                        inS__.endReadParams();
                        try
                        {
                            bool ret__ = obj__.DeleteFriend(sid, frdCid, relationType, current__);
                            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                            os__.writeBool(ret__);
                            inS__.endWriteParams__(true);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(es.upm.fi.rmi.PaseoException ex__)
                        {
                            inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus GetIdleFriendList___(FriendService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        sid = is__.readLong();
                        inS__.endReadParams();
                        try
                        {
                            es.upm.fi.rmi.FriendInfo[] ret__ = obj__.GetIdleFriendList(sid, current__);
                            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                            es.upm.fi.rmi.FriendInfoSeqHelper.write(os__, ret__);
                            inS__.endWriteParams__(true);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(es.upm.fi.rmi.PaseoException ex__)
                        {
                            inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    }

                    private static string[] all__ =
                    {
                        "AddFriendById",
                        "AddFriendByName",
                        "DeleteFriend",
                        "GetBlackList",
                        "GetFriendList",
                        "GetIdleFriendList",
                        "ice_id",
                        "ice_ids",
                        "ice_isA",
                        "ice_ping"
                    };

                    public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                        if(pos < 0)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }

                        switch(pos)
                        {
                            case 0:
                            {
                                return AddFriendById___(this, inS__, current__);
                            }
                            case 1:
                            {
                                return AddFriendByName___(this, inS__, current__);
                            }
                            case 2:
                            {
                                return DeleteFriend___(this, inS__, current__);
                            }
                            case 3:
                            {
                                return GetBlackList___(this, inS__, current__);
                            }
                            case 4:
                            {
                                return GetFriendList___(this, inS__, current__);
                            }
                            case 5:
                            {
                                return GetIdleFriendList___(this, inS__, current__);
                            }
                            case 6:
                            {
                                return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                            }
                            case 7:
                            {
                                return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                            }
                            case 8:
                            {
                                return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                            }
                            case 9:
                            {
                                return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                            }
                        }

                        _System.Diagnostics.Debug.Assert(false);
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    #endregion

                    #region Marshaling support

                    protected override void writeImpl__(IceInternal.BasicStream os__)
                    {
                        os__.startWriteSlice(ice_staticId(), -1, true);
                        os__.endWriteSlice();
                    }

                    protected override void readImpl__(IceInternal.BasicStream is__)
                    {
                        is__.startReadSlice();
                        is__.endReadSlice();
                    }

                    #endregion
                }
            }
        }
    }
}
