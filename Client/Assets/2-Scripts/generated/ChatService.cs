// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `ChatService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                public partial struct ChannelInfo
                {
                    #region Slice data members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public long channelId;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public int curPlayerNum;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public int maxPlayerNum;

                    #endregion

                    #region Constructor

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChannelInfo(long channelId, int curPlayerNum, int maxPlayerNum)
                    {
                        this.channelId = channelId;
                        this.curPlayerNum = curPlayerNum;
                        this.maxPlayerNum = maxPlayerNum;
                    }

                    #endregion

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = 5381;
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::ChannelInfo");
                        IceInternal.HashUtil.hashAdd(ref h__, channelId);
                        IceInternal.HashUtil.hashAdd(ref h__, curPlayerNum);
                        IceInternal.HashUtil.hashAdd(ref h__, maxPlayerNum);
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(!(other__ is ChannelInfo))
                        {
                            return false;
                        }
                        ChannelInfo o__ = (ChannelInfo)other__;
                        if(!channelId.Equals(o__.channelId))
                        {
                            return false;
                        }
                        if(!curPlayerNum.Equals(o__.curPlayerNum))
                        {
                            return false;
                        }
                        if(!maxPlayerNum.Equals(o__.maxPlayerNum))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(ChannelInfo lhs__, ChannelInfo rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(ChannelInfo lhs__, ChannelInfo rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshalling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public void write__(IceInternal.BasicStream os__)
                    {
                        os__.writeLong(channelId);
                        os__.writeInt(curPlayerNum);
                        os__.writeInt(maxPlayerNum);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public void read__(IceInternal.BasicStream is__)
                    {
                        channelId = is__.readLong();
                        curPlayerNum = is__.readInt();
                        maxPlayerNum = is__.readInt();
                    }

                    #endregion
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                public partial class NoticeInfo : _System.ICloneable
                {
                    #region Slice data members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public int noticeId;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public string noticeMessage;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public string noticeTitle;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public long beginTime;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public long deadTime;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public byte noticeType;

                    #endregion

                    #region Constructors

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public NoticeInfo()
                    {
                        noticeMessage = "";
                        noticeTitle = "";
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public NoticeInfo(int noticeId, string noticeMessage, string noticeTitle, long beginTime, long deadTime, byte noticeType)
                    {
                        this.noticeId = noticeId;
                        this.noticeMessage = noticeMessage;
                        this.noticeTitle = noticeTitle;
                        this.beginTime = beginTime;
                        this.deadTime = deadTime;
                        this.noticeType = noticeType;
                    }

                    #endregion

                    #region ICloneable members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public object Clone()
                    {
                        return MemberwiseClone();
                    }

                    #endregion

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = 5381;
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::NoticeInfo");
                        IceInternal.HashUtil.hashAdd(ref h__, noticeId);
                        IceInternal.HashUtil.hashAdd(ref h__, noticeMessage);
                        IceInternal.HashUtil.hashAdd(ref h__, noticeTitle);
                        IceInternal.HashUtil.hashAdd(ref h__, beginTime);
                        IceInternal.HashUtil.hashAdd(ref h__, deadTime);
                        IceInternal.HashUtil.hashAdd(ref h__, noticeType);
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(object.ReferenceEquals(this, other__))
                        {
                            return true;
                        }
                        if(other__ == null)
                        {
                            return false;
                        }
                        if(GetType() != other__.GetType())
                        {
                            return false;
                        }
                        NoticeInfo o__ = (NoticeInfo)other__;
                        if(!noticeId.Equals(o__.noticeId))
                        {
                            return false;
                        }
                        if(noticeMessage == null)
                        {
                            if(o__.noticeMessage != null)
                            {
                                return false;
                            }
                        }
                        else
                        {
                            if(!noticeMessage.Equals(o__.noticeMessage))
                            {
                                return false;
                            }
                        }
                        if(noticeTitle == null)
                        {
                            if(o__.noticeTitle != null)
                            {
                                return false;
                            }
                        }
                        else
                        {
                            if(!noticeTitle.Equals(o__.noticeTitle))
                            {
                                return false;
                            }
                        }
                        if(!beginTime.Equals(o__.beginTime))
                        {
                            return false;
                        }
                        if(!deadTime.Equals(o__.deadTime))
                        {
                            return false;
                        }
                        if(!noticeType.Equals(o__.noticeType))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(NoticeInfo lhs__, NoticeInfo rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(NoticeInfo lhs__, NoticeInfo rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshalling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public void write__(IceInternal.BasicStream os__)
                    {
                        os__.writeInt(noticeId);
                        os__.writeString(noticeMessage);
                        os__.writeString(noticeTitle);
                        os__.writeLong(beginTime);
                        os__.writeLong(deadTime);
                        os__.writeByte(noticeType);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public void read__(IceInternal.BasicStream is__)
                    {
                        noticeId = is__.readInt();
                        noticeMessage = is__.readString();
                        noticeTitle = is__.readString();
                        beginTime = is__.readLong();
                        deadTime = is__.readLong();
                        noticeType = is__.readByte();
                    }
                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static void write__(IceInternal.BasicStream os__, NoticeInfo v__)
                    {
                        if(v__ == null)
                        {
                            nullMarshalValue__.write__(os__);
                        }
                        else
                        {
                            v__.write__(os__);
                        }
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static NoticeInfo read__(IceInternal.BasicStream is__, NoticeInfo v__)
                    {
                        if(v__ == null)
                        {
                            v__ = new NoticeInfo();
                        }
                        v__.read__(is__);
                        return v__;
                    }
                    
                    private static readonly NoticeInfo nullMarshalValue__ = new NoticeInfo();

                    #endregion
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                public partial class InformationInfo : _System.ICloneable
                {
                    #region Slice data members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public int informationId;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public int informationPeriod;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public string informationMessage;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public string informationTitle;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public long beginTime;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public long deadTime;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public byte informationType;

                    #endregion

                    #region Constructors

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public InformationInfo()
                    {
                        informationMessage = "";
                        informationTitle = "";
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public InformationInfo(int informationId, int informationPeriod, string informationMessage, string informationTitle, long beginTime, long deadTime, byte informationType)
                    {
                        this.informationId = informationId;
                        this.informationPeriod = informationPeriod;
                        this.informationMessage = informationMessage;
                        this.informationTitle = informationTitle;
                        this.beginTime = beginTime;
                        this.deadTime = deadTime;
                        this.informationType = informationType;
                    }

                    #endregion

                    #region ICloneable members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public object Clone()
                    {
                        return MemberwiseClone();
                    }

                    #endregion

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = 5381;
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::InformationInfo");
                        IceInternal.HashUtil.hashAdd(ref h__, informationId);
                        IceInternal.HashUtil.hashAdd(ref h__, informationPeriod);
                        IceInternal.HashUtil.hashAdd(ref h__, informationMessage);
                        IceInternal.HashUtil.hashAdd(ref h__, informationTitle);
                        IceInternal.HashUtil.hashAdd(ref h__, beginTime);
                        IceInternal.HashUtil.hashAdd(ref h__, deadTime);
                        IceInternal.HashUtil.hashAdd(ref h__, informationType);
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(object.ReferenceEquals(this, other__))
                        {
                            return true;
                        }
                        if(other__ == null)
                        {
                            return false;
                        }
                        if(GetType() != other__.GetType())
                        {
                            return false;
                        }
                        InformationInfo o__ = (InformationInfo)other__;
                        if(!informationId.Equals(o__.informationId))
                        {
                            return false;
                        }
                        if(!informationPeriod.Equals(o__.informationPeriod))
                        {
                            return false;
                        }
                        if(informationMessage == null)
                        {
                            if(o__.informationMessage != null)
                            {
                                return false;
                            }
                        }
                        else
                        {
                            if(!informationMessage.Equals(o__.informationMessage))
                            {
                                return false;
                            }
                        }
                        if(informationTitle == null)
                        {
                            if(o__.informationTitle != null)
                            {
                                return false;
                            }
                        }
                        else
                        {
                            if(!informationTitle.Equals(o__.informationTitle))
                            {
                                return false;
                            }
                        }
                        if(!beginTime.Equals(o__.beginTime))
                        {
                            return false;
                        }
                        if(!deadTime.Equals(o__.deadTime))
                        {
                            return false;
                        }
                        if(!informationType.Equals(o__.informationType))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(InformationInfo lhs__, InformationInfo rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(InformationInfo lhs__, InformationInfo rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshalling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public void write__(IceInternal.BasicStream os__)
                    {
                        os__.writeInt(informationId);
                        os__.writeInt(informationPeriod);
                        os__.writeString(informationMessage);
                        os__.writeString(informationTitle);
                        os__.writeLong(beginTime);
                        os__.writeLong(deadTime);
                        os__.writeByte(informationType);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public void read__(IceInternal.BasicStream is__)
                    {
                        informationId = is__.readInt();
                        informationPeriod = is__.readInt();
                        informationMessage = is__.readString();
                        informationTitle = is__.readString();
                        beginTime = is__.readLong();
                        deadTime = is__.readLong();
                        informationType = is__.readByte();
                    }
                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static void write__(IceInternal.BasicStream os__, InformationInfo v__)
                    {
                        if(v__ == null)
                        {
                            nullMarshalValue__.write__(os__);
                        }
                        else
                        {
                            v__.write__(os__);
                        }
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static InformationInfo read__(IceInternal.BasicStream is__, InformationInfo v__)
                    {
                        if(v__ == null)
                        {
                            v__ = new InformationInfo();
                        }
                        v__.read__(is__);
                        return v__;
                    }
                    
                    private static readonly InformationInfo nullMarshalValue__ = new InformationInfo();

                    #endregion
                }

                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                public partial class SendInformationInfo : _System.ICloneable
                {
                    #region Slice data members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public es.upm.fi.rmi.InformationInfo informationStruct;

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public byte informationState;

                    #endregion

                    #region Constructors

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public SendInformationInfo()
                    {
                        informationStruct = new es.upm.fi.rmi.InformationInfo();
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public SendInformationInfo(es.upm.fi.rmi.InformationInfo informationStruct, byte informationState)
                    {
                        this.informationStruct = informationStruct;
                        this.informationState = informationState;
                    }

                    #endregion

                    #region ICloneable members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public object Clone()
                    {
                        return MemberwiseClone();
                    }

                    #endregion

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = 5381;
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::SendInformationInfo");
                        IceInternal.HashUtil.hashAdd(ref h__, informationStruct);
                        IceInternal.HashUtil.hashAdd(ref h__, informationState);
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(object.ReferenceEquals(this, other__))
                        {
                            return true;
                        }
                        if(other__ == null)
                        {
                            return false;
                        }
                        if(GetType() != other__.GetType())
                        {
                            return false;
                        }
                        SendInformationInfo o__ = (SendInformationInfo)other__;
                        if(informationStruct == null)
                        {
                            if(o__.informationStruct != null)
                            {
                                return false;
                            }
                        }
                        else
                        {
                            if(!informationStruct.Equals(o__.informationStruct))
                            {
                                return false;
                            }
                        }
                        if(!informationState.Equals(o__.informationState))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(SendInformationInfo lhs__, SendInformationInfo rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(SendInformationInfo lhs__, SendInformationInfo rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshalling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public void write__(IceInternal.BasicStream os__)
                    {
                        es.upm.fi.rmi.InformationInfo.write__(os__, informationStruct);
                        os__.writeByte(informationState);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public void read__(IceInternal.BasicStream is__)
                    {
                        informationStruct = es.upm.fi.rmi.InformationInfo.read__(is__, informationStruct);
                        informationState = is__.readByte();
                    }
                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static void write__(IceInternal.BasicStream os__, SendInformationInfo v__)
                    {
                        if(v__ == null)
                        {
                            nullMarshalValue__.write__(os__);
                        }
                        else
                        {
                            v__.write__(os__);
                        }
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static SendInformationInfo read__(IceInternal.BasicStream is__, SendInformationInfo v__)
                    {
                        if(v__ == null)
                        {
                            v__ = new SendInformationInfo();
                        }
                        v__.read__(is__);
                        return v__;
                    }
                    
                    private static readonly SendInformationInfo nullMarshalValue__ = new SendInformationInfo();

                    #endregion
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
                public partial class ChatException : es.upm.fi.rmi.PaseoException
                {
                    #region Constructors

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChatException()
                    {
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChatException(_System.Exception ex__) : base(ex__)
                    {
                    }
#if !SILVERLIGHT

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChatException(_System.Runtime.Serialization.SerializationInfo info__, _System.Runtime.Serialization.StreamingContext context__) : base(info__, context__)
                    {
                    }
#endif

                    #endregion

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override string ice_name()
                    {
                        return "es::upm::fi::rmi::ChatException";
                    }

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = base.GetHashCode();
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::ChatException");
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(other__ == null)
                        {
                            return false;
                        }
                        if(object.ReferenceEquals(this, other__))
                        {
                            return true;
                        }
                        ChatException o__ = other__ as ChatException;
                        if(o__ == null)
                        {
                            return false;
                        }
                        if(!base.Equals(other__))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(ChatException lhs__, ChatException rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(ChatException lhs__, ChatException rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshaling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void writeImpl__(IceInternal.BasicStream os__)
                    {
                        os__.startWriteSlice("::es::upm::fi::rmi::ChatException", -1, false);
                        os__.endWriteSlice();
                        base.writeImpl__(os__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void readImpl__(IceInternal.BasicStream is__)
                    {
                        is__.startReadSlice();
                        is__.endReadSlice();
                        base.readImpl__(is__);
                    }

                    #endregion
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
                public partial class ChannelNotExisted : es.upm.fi.rmi.ChatException
                {
                    #region Constructors

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChannelNotExisted()
                    {
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChannelNotExisted(_System.Exception ex__) : base(ex__)
                    {
                    }
#if !SILVERLIGHT

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChannelNotExisted(_System.Runtime.Serialization.SerializationInfo info__, _System.Runtime.Serialization.StreamingContext context__) : base(info__, context__)
                    {
                    }
#endif

                    #endregion

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override string ice_name()
                    {
                        return "es::upm::fi::rmi::ChannelNotExisted";
                    }

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = base.GetHashCode();
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::ChannelNotExisted");
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(other__ == null)
                        {
                            return false;
                        }
                        if(object.ReferenceEquals(this, other__))
                        {
                            return true;
                        }
                        ChannelNotExisted o__ = other__ as ChannelNotExisted;
                        if(o__ == null)
                        {
                            return false;
                        }
                        if(!base.Equals(other__))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(ChannelNotExisted lhs__, ChannelNotExisted rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(ChannelNotExisted lhs__, ChannelNotExisted rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshaling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void writeImpl__(IceInternal.BasicStream os__)
                    {
                        os__.startWriteSlice("::es::upm::fi::rmi::ChannelNotExisted", -1, false);
                        os__.endWriteSlice();
                        base.writeImpl__(os__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void readImpl__(IceInternal.BasicStream is__)
                    {
                        is__.startReadSlice();
                        is__.endReadSlice();
                        base.readImpl__(is__);
                    }

                    #endregion
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
                public partial class ChannelFull : es.upm.fi.rmi.ChatException
                {
                    #region Constructors

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChannelFull()
                    {
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChannelFull(_System.Exception ex__) : base(ex__)
                    {
                    }
#if !SILVERLIGHT

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChannelFull(_System.Runtime.Serialization.SerializationInfo info__, _System.Runtime.Serialization.StreamingContext context__) : base(info__, context__)
                    {
                    }
#endif

                    #endregion

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override string ice_name()
                    {
                        return "es::upm::fi::rmi::ChannelFull";
                    }

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = base.GetHashCode();
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::ChannelFull");
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(other__ == null)
                        {
                            return false;
                        }
                        if(object.ReferenceEquals(this, other__))
                        {
                            return true;
                        }
                        ChannelFull o__ = other__ as ChannelFull;
                        if(o__ == null)
                        {
                            return false;
                        }
                        if(!base.Equals(other__))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(ChannelFull lhs__, ChannelFull rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(ChannelFull lhs__, ChannelFull rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshaling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void writeImpl__(IceInternal.BasicStream os__)
                    {
                        os__.startWriteSlice("::es::upm::fi::rmi::ChannelFull", -1, false);
                        os__.endWriteSlice();
                        base.writeImpl__(os__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void readImpl__(IceInternal.BasicStream is__)
                    {
                        is__.startReadSlice();
                        is__.endReadSlice();
                        base.readImpl__(is__);
                    }

                    #endregion
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
                public partial class NoticeNotExisted : es.upm.fi.rmi.ChatException
                {
                    #region Constructors

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public NoticeNotExisted()
                    {
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public NoticeNotExisted(_System.Exception ex__) : base(ex__)
                    {
                    }
#if !SILVERLIGHT

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public NoticeNotExisted(_System.Runtime.Serialization.SerializationInfo info__, _System.Runtime.Serialization.StreamingContext context__) : base(info__, context__)
                    {
                    }
#endif

                    #endregion

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override string ice_name()
                    {
                        return "es::upm::fi::rmi::NoticeNotExisted";
                    }

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = base.GetHashCode();
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::NoticeNotExisted");
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(other__ == null)
                        {
                            return false;
                        }
                        if(object.ReferenceEquals(this, other__))
                        {
                            return true;
                        }
                        NoticeNotExisted o__ = other__ as NoticeNotExisted;
                        if(o__ == null)
                        {
                            return false;
                        }
                        if(!base.Equals(other__))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(NoticeNotExisted lhs__, NoticeNotExisted rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(NoticeNotExisted lhs__, NoticeNotExisted rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshaling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void writeImpl__(IceInternal.BasicStream os__)
                    {
                        os__.startWriteSlice("::es::upm::fi::rmi::NoticeNotExisted", -1, false);
                        os__.endWriteSlice();
                        base.writeImpl__(os__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void readImpl__(IceInternal.BasicStream is__)
                    {
                        is__.startReadSlice();
                        is__.endReadSlice();
                        base.readImpl__(is__);
                    }

                    #endregion
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
                public partial interface ChatService : Ice.Object, ChatServiceOperations_, ChatServiceOperationsNC_
                {
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_SendChatMessage();

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_JoinChannel(es.upm.fi.rmi.ChannelInfo ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_GetAllChannel(es.upm.fi.rmi.ChannelInfo[] ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_SendNotice(bool ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_GetAllNoticeByType(es.upm.fi.rmi.NoticeInfo[] ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_DelNotice(bool ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_SendInformation(bool ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_GetAllInformation(es.upm.fi.rmi.InformationInfo[] ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_DelInformation(bool ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_GetSameChannelIdlePlayers(es.upm.fi.rmi.CharacterProfile[] ret__);

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_GetOnlineUserList(string[] ret__);
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface ChatServicePrx : Ice.ObjectPrx
                {
                    void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message);

                    void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    void end_SendChatMessage(Ice.AsyncResult r__);

                    es.upm.fi.rmi.ChannelInfo JoinChannel(long sid, long channelId);

                    es.upm.fi.rmi.ChannelInfo JoinChannel(long sid, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_JoinChannel> begin_JoinChannel(long sid, long channelId);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_JoinChannel> begin_JoinChannel(long sid, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_JoinChannel(long sid, long channelId, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_JoinChannel(long sid, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    es.upm.fi.rmi.ChannelInfo end_JoinChannel(Ice.AsyncResult r__);

                    es.upm.fi.rmi.ChannelInfo[] GetAllChannel(long sid);

                    es.upm.fi.rmi.ChannelInfo[] GetAllChannel(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllChannel> begin_GetAllChannel(long sid);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllChannel> begin_GetAllChannel(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_GetAllChannel(long sid, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_GetAllChannel(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    es.upm.fi.rmi.ChannelInfo[] end_GetAllChannel(Ice.AsyncResult r__);

                    bool SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info);

                    bool SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendNotice> begin_SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendNotice> begin_SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    bool end_SendNotice(Ice.AsyncResult r__);

                    es.upm.fi.rmi.NoticeInfo[] GetAllNoticeByType(long sid, byte noticeType);

                    es.upm.fi.rmi.NoticeInfo[] GetAllNoticeByType(long sid, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllNoticeByType> begin_GetAllNoticeByType(long sid, byte noticeType);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllNoticeByType> begin_GetAllNoticeByType(long sid, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_GetAllNoticeByType(long sid, byte noticeType, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_GetAllNoticeByType(long sid, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    es.upm.fi.rmi.NoticeInfo[] end_GetAllNoticeByType(Ice.AsyncResult r__);

                    bool DelNotice(long sid, int noticeId, byte noticeType);

                    bool DelNotice(long sid, int noticeId, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_DelNotice> begin_DelNotice(long sid, int noticeId, byte noticeType);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_DelNotice> begin_DelNotice(long sid, int noticeId, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_DelNotice(long sid, int noticeId, byte noticeType, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_DelNotice(long sid, int noticeId, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    bool end_DelNotice(Ice.AsyncResult r__);

                    bool SendInformation(long sid, es.upm.fi.rmi.InformationInfo info);

                    bool SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendInformation> begin_SendInformation(long sid, es.upm.fi.rmi.InformationInfo info);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendInformation> begin_SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    bool end_SendInformation(Ice.AsyncResult r__);

                    es.upm.fi.rmi.InformationInfo[] GetAllInformation(long sid);

                    es.upm.fi.rmi.InformationInfo[] GetAllInformation(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllInformation> begin_GetAllInformation(long sid);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllInformation> begin_GetAllInformation(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_GetAllInformation(long sid, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_GetAllInformation(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    es.upm.fi.rmi.InformationInfo[] end_GetAllInformation(Ice.AsyncResult r__);

                    bool DelInformation(long sid, int informationId);

                    bool DelInformation(long sid, int informationId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_DelInformation> begin_DelInformation(long sid, int informationId);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_DelInformation> begin_DelInformation(long sid, int informationId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_DelInformation(long sid, int informationId, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_DelInformation(long sid, int informationId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    bool end_DelInformation(Ice.AsyncResult r__);

                    es.upm.fi.rmi.CharacterProfile[] GetSameChannelIdlePlayers(long sid);

                    es.upm.fi.rmi.CharacterProfile[] GetSameChannelIdlePlayers(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetSameChannelIdlePlayers> begin_GetSameChannelIdlePlayers(long sid);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetSameChannelIdlePlayers> begin_GetSameChannelIdlePlayers(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_GetSameChannelIdlePlayers(long sid, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_GetSameChannelIdlePlayers(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    es.upm.fi.rmi.CharacterProfile[] end_GetSameChannelIdlePlayers(Ice.AsyncResult r__);

                    string[] GetOnlineUserList();

                    string[] GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> begin_GetOnlineUserList();

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> begin_GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_GetOnlineUserList(Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    string[] end_GetOnlineUserList(Ice.AsyncResult r__);
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface ChatServiceOperations_
                {
                    void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, Ice.Current current__);

                    es.upm.fi.rmi.ChannelInfo JoinChannel(long sid, long channelId, Ice.Current current__);

                    es.upm.fi.rmi.ChannelInfo[] GetAllChannel(long sid, Ice.Current current__);

                    bool SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, Ice.Current current__);

                    es.upm.fi.rmi.NoticeInfo[] GetAllNoticeByType(long sid, byte noticeType, Ice.Current current__);

                    bool DelNotice(long sid, int noticeId, byte noticeType, Ice.Current current__);

                    bool SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, Ice.Current current__);

                    es.upm.fi.rmi.InformationInfo[] GetAllInformation(long sid, Ice.Current current__);

                    bool DelInformation(long sid, int informationId, Ice.Current current__);

                    es.upm.fi.rmi.CharacterProfile[] GetSameChannelIdlePlayers(long sid, Ice.Current current__);

                    string[] GetOnlineUserList(Ice.Current current__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface ChatServiceOperationsNC_
                {
                    void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message);

                    es.upm.fi.rmi.ChannelInfo JoinChannel(long sid, long channelId);

                    es.upm.fi.rmi.ChannelInfo[] GetAllChannel(long sid);

                    bool SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info);

                    es.upm.fi.rmi.NoticeInfo[] GetAllNoticeByType(long sid, byte noticeType);

                    bool DelNotice(long sid, int noticeId, byte noticeType);

                    bool SendInformation(long sid, es.upm.fi.rmi.InformationInfo info);

                    es.upm.fi.rmi.InformationInfo[] GetAllInformation(long sid);

                    bool DelInformation(long sid, int informationId);

                    es.upm.fi.rmi.CharacterProfile[] GetSameChannelIdlePlayers(long sid);

                    string[] GetOnlineUserList();
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public sealed class ChannelSeqHelper
                {
                    public static void write(IceInternal.BasicStream os__, es.upm.fi.rmi.ChannelInfo[] v__)
                    {
                        if(v__ == null)
                        {
                            os__.writeSize(0);
                        }
                        else
                        {
                            os__.writeSize(v__.Length);
                            for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                            {
                                v__[ix__].write__(os__);
                            }
                        }
                    }

                    public static es.upm.fi.rmi.ChannelInfo[] read(IceInternal.BasicStream is__)
                    {
                        es.upm.fi.rmi.ChannelInfo[] v__;
                        {
                            int szx__ = is__.readAndCheckSeqSize(16);
                            v__ = new es.upm.fi.rmi.ChannelInfo[szx__];
                            for(int ix__ = 0; ix__ < szx__; ++ix__)
                            {
                                v__[ix__].read__(is__);
                            }
                        }
                        return v__;
                    }
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public sealed class NoticeInfoSeqHelper
                {
                    public static void write(IceInternal.BasicStream os__, es.upm.fi.rmi.NoticeInfo[] v__)
                    {
                        if(v__ == null)
                        {
                            os__.writeSize(0);
                        }
                        else
                        {
                            os__.writeSize(v__.Length);
                            for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                            {
                                (v__[ix__] == null ? new es.upm.fi.rmi.NoticeInfo() : v__[ix__]).write__(os__);
                            }
                        }
                    }

                    public static es.upm.fi.rmi.NoticeInfo[] read(IceInternal.BasicStream is__)
                    {
                        es.upm.fi.rmi.NoticeInfo[] v__;
                        {
                            int szx__ = is__.readAndCheckSeqSize(23);
                            v__ = new es.upm.fi.rmi.NoticeInfo[szx__];
                            for(int ix__ = 0; ix__ < szx__; ++ix__)
                            {
                                v__[ix__] = new es.upm.fi.rmi.NoticeInfo();
                                v__[ix__].read__(is__);
                            }
                        }
                        return v__;
                    }
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public sealed class InformationInfoSeqHelper
                {
                    public static void write(IceInternal.BasicStream os__, es.upm.fi.rmi.InformationInfo[] v__)
                    {
                        if(v__ == null)
                        {
                            os__.writeSize(0);
                        }
                        else
                        {
                            os__.writeSize(v__.Length);
                            for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                            {
                                (v__[ix__] == null ? new es.upm.fi.rmi.InformationInfo() : v__[ix__]).write__(os__);
                            }
                        }
                    }

                    public static es.upm.fi.rmi.InformationInfo[] read(IceInternal.BasicStream is__)
                    {
                        es.upm.fi.rmi.InformationInfo[] v__;
                        {
                            int szx__ = is__.readAndCheckSeqSize(27);
                            v__ = new es.upm.fi.rmi.InformationInfo[szx__];
                            for(int ix__ = 0; ix__ < szx__; ++ix__)
                            {
                                v__[ix__] = new es.upm.fi.rmi.InformationInfo();
                                v__[ix__].read__(is__);
                            }
                        }
                        return v__;
                    }
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public sealed class OnlineUserSeqHelper
                {
                    public static void write(IceInternal.BasicStream os__, string[] v__)
                    {
                        os__.writeStringSeq(v__);
                    }

                    public static string[] read(IceInternal.BasicStream is__)
                    {
                        string[] v__;
                        v__ = is__.readStringSeq();
                        return v__;
                    }
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public sealed class ChatServicePrxHelper : Ice.ObjectPrxHelperBase, ChatServicePrx
                {
                    #region Synchronous operations

                    public bool DelInformation(long sid, int informationId)
                    {
                        return this.DelInformation(sid, informationId, null, false);
                    }

                    public bool DelInformation(long sid, int informationId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.DelInformation(sid, informationId, ctx__, true);
                    }

                    private bool DelInformation(long sid, int informationId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__DelInformation_name);
                        return end_DelInformation(begin_DelInformation(sid, informationId, context__, explicitCtx__, true, null, null));
                    }

                    public bool DelNotice(long sid, int noticeId, byte noticeType)
                    {
                        return this.DelNotice(sid, noticeId, noticeType, null, false);
                    }

                    public bool DelNotice(long sid, int noticeId, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.DelNotice(sid, noticeId, noticeType, ctx__, true);
                    }

                    private bool DelNotice(long sid, int noticeId, byte noticeType, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__DelNotice_name);
                        return end_DelNotice(begin_DelNotice(sid, noticeId, noticeType, context__, explicitCtx__, true, null, null));
                    }

                    public es.upm.fi.rmi.ChannelInfo[] GetAllChannel(long sid)
                    {
                        return this.GetAllChannel(sid, null, false);
                    }

                    public es.upm.fi.rmi.ChannelInfo[] GetAllChannel(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.GetAllChannel(sid, ctx__, true);
                    }

                    private es.upm.fi.rmi.ChannelInfo[] GetAllChannel(long sid, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__GetAllChannel_name);
                        return end_GetAllChannel(begin_GetAllChannel(sid, context__, explicitCtx__, true, null, null));
                    }

                    public es.upm.fi.rmi.InformationInfo[] GetAllInformation(long sid)
                    {
                        return this.GetAllInformation(sid, null, false);
                    }

                    public es.upm.fi.rmi.InformationInfo[] GetAllInformation(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.GetAllInformation(sid, ctx__, true);
                    }

                    private es.upm.fi.rmi.InformationInfo[] GetAllInformation(long sid, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__GetAllInformation_name);
                        return end_GetAllInformation(begin_GetAllInformation(sid, context__, explicitCtx__, true, null, null));
                    }

                    public es.upm.fi.rmi.NoticeInfo[] GetAllNoticeByType(long sid, byte noticeType)
                    {
                        return this.GetAllNoticeByType(sid, noticeType, null, false);
                    }

                    public es.upm.fi.rmi.NoticeInfo[] GetAllNoticeByType(long sid, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.GetAllNoticeByType(sid, noticeType, ctx__, true);
                    }

                    private es.upm.fi.rmi.NoticeInfo[] GetAllNoticeByType(long sid, byte noticeType, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__GetAllNoticeByType_name);
                        return end_GetAllNoticeByType(begin_GetAllNoticeByType(sid, noticeType, context__, explicitCtx__, true, null, null));
                    }

                    public string[] GetOnlineUserList()
                    {
                        return this.GetOnlineUserList(null, false);
                    }

                    public string[] GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.GetOnlineUserList(ctx__, true);
                    }

                    private string[] GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__GetOnlineUserList_name);
                        return end_GetOnlineUserList(begin_GetOnlineUserList(context__, explicitCtx__, true, null, null));
                    }

                    public es.upm.fi.rmi.CharacterProfile[] GetSameChannelIdlePlayers(long sid)
                    {
                        return this.GetSameChannelIdlePlayers(sid, null, false);
                    }

                    public es.upm.fi.rmi.CharacterProfile[] GetSameChannelIdlePlayers(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.GetSameChannelIdlePlayers(sid, ctx__, true);
                    }

                    private es.upm.fi.rmi.CharacterProfile[] GetSameChannelIdlePlayers(long sid, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__GetSameChannelIdlePlayers_name);
                        return end_GetSameChannelIdlePlayers(begin_GetSameChannelIdlePlayers(sid, context__, explicitCtx__, true, null, null));
                    }

                    public es.upm.fi.rmi.ChannelInfo JoinChannel(long sid, long channelId)
                    {
                        return this.JoinChannel(sid, channelId, null, false);
                    }

                    public es.upm.fi.rmi.ChannelInfo JoinChannel(long sid, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.JoinChannel(sid, channelId, ctx__, true);
                    }

                    private es.upm.fi.rmi.ChannelInfo JoinChannel(long sid, long channelId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__JoinChannel_name);
                        return end_JoinChannel(begin_JoinChannel(sid, channelId, context__, explicitCtx__, true, null, null));
                    }

                    public void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message)
                    {
                        this.SendChatMessage(sid, scopeId, senderSid, receiverName, message, null, false);
                    }

                    public void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        this.SendChatMessage(sid, scopeId, senderSid, receiverName, message, ctx__, true);
                    }

                    private void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__SendChatMessage_name);
                        end_SendChatMessage(begin_SendChatMessage(sid, scopeId, senderSid, receiverName, message, context__, explicitCtx__, true, null, null));
                    }

                    public bool SendInformation(long sid, es.upm.fi.rmi.InformationInfo info)
                    {
                        return this.SendInformation(sid, info, null, false);
                    }

                    public bool SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.SendInformation(sid, info, ctx__, true);
                    }

                    private bool SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__SendInformation_name);
                        return end_SendInformation(begin_SendInformation(sid, info, context__, explicitCtx__, true, null, null));
                    }

                    public bool SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info)
                    {
                        return this.SendNotice(sid, info, null, false);
                    }

                    public bool SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.SendNotice(sid, info, ctx__, true);
                    }

                    private bool SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__SendNotice_name);
                        return end_SendNotice(begin_SendNotice(sid, info, context__, explicitCtx__, true, null, null));
                    }

                    #endregion

                    #region Asynchronous operations

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_DelInformation> begin_DelInformation(long sid, int informationId)
                    {
                        return begin_DelInformation(sid, informationId, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_DelInformation> begin_DelInformation(long sid, int informationId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_DelInformation(sid, informationId, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_DelInformation(long sid, int informationId, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_DelInformation(sid, informationId, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_DelInformation(long sid, int informationId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_DelInformation(sid, informationId, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __DelInformation_name = "DelInformation";

                    public bool end_DelInformation(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __DelInformation_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            bool ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = is__.readBool();
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_DelInformation> begin_DelInformation(long sid, int informationId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__DelInformation_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_DelInformation> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_DelInformation>(__DelInformation_name, DelInformation_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__DelInformation_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            os__.writeInt(informationId);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void DelInformation_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_DelInformation cb__, Ice.ExceptionCallback excb__)
                    {
                        bool ret__;
                        try
                        {
                            ret__ = end_DelInformation(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_DelNotice> begin_DelNotice(long sid, int noticeId, byte noticeType)
                    {
                        return begin_DelNotice(sid, noticeId, noticeType, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_DelNotice> begin_DelNotice(long sid, int noticeId, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_DelNotice(sid, noticeId, noticeType, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_DelNotice(long sid, int noticeId, byte noticeType, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_DelNotice(sid, noticeId, noticeType, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_DelNotice(long sid, int noticeId, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_DelNotice(sid, noticeId, noticeType, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __DelNotice_name = "DelNotice";

                    public bool end_DelNotice(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __DelNotice_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            bool ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = is__.readBool();
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_DelNotice> begin_DelNotice(long sid, int noticeId, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__DelNotice_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_DelNotice> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_DelNotice>(__DelNotice_name, DelNotice_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__DelNotice_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            os__.writeInt(noticeId);
                            os__.writeByte(noticeType);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void DelNotice_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_DelNotice cb__, Ice.ExceptionCallback excb__)
                    {
                        bool ret__;
                        try
                        {
                            ret__ = end_DelNotice(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllChannel> begin_GetAllChannel(long sid)
                    {
                        return begin_GetAllChannel(sid, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllChannel> begin_GetAllChannel(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_GetAllChannel(sid, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_GetAllChannel(long sid, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetAllChannel(sid, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_GetAllChannel(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetAllChannel(sid, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __GetAllChannel_name = "GetAllChannel";

                    public es.upm.fi.rmi.ChannelInfo[] end_GetAllChannel(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __GetAllChannel_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            es.upm.fi.rmi.ChannelInfo[] ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = es.upm.fi.rmi.ChannelSeqHelper.read(is__);
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllChannel> begin_GetAllChannel(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__GetAllChannel_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetAllChannel> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetAllChannel>(__GetAllChannel_name, GetAllChannel_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__GetAllChannel_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void GetAllChannel_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_GetAllChannel cb__, Ice.ExceptionCallback excb__)
                    {
                        es.upm.fi.rmi.ChannelInfo[] ret__;
                        try
                        {
                            ret__ = end_GetAllChannel(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllInformation> begin_GetAllInformation(long sid)
                    {
                        return begin_GetAllInformation(sid, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllInformation> begin_GetAllInformation(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_GetAllInformation(sid, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_GetAllInformation(long sid, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetAllInformation(sid, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_GetAllInformation(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetAllInformation(sid, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __GetAllInformation_name = "GetAllInformation";

                    public es.upm.fi.rmi.InformationInfo[] end_GetAllInformation(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __GetAllInformation_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            es.upm.fi.rmi.InformationInfo[] ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = es.upm.fi.rmi.InformationInfoSeqHelper.read(is__);
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllInformation> begin_GetAllInformation(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__GetAllInformation_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetAllInformation> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetAllInformation>(__GetAllInformation_name, GetAllInformation_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__GetAllInformation_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void GetAllInformation_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_GetAllInformation cb__, Ice.ExceptionCallback excb__)
                    {
                        es.upm.fi.rmi.InformationInfo[] ret__;
                        try
                        {
                            ret__ = end_GetAllInformation(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllNoticeByType> begin_GetAllNoticeByType(long sid, byte noticeType)
                    {
                        return begin_GetAllNoticeByType(sid, noticeType, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllNoticeByType> begin_GetAllNoticeByType(long sid, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_GetAllNoticeByType(sid, noticeType, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_GetAllNoticeByType(long sid, byte noticeType, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetAllNoticeByType(sid, noticeType, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_GetAllNoticeByType(long sid, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetAllNoticeByType(sid, noticeType, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __GetAllNoticeByType_name = "GetAllNoticeByType";

                    public es.upm.fi.rmi.NoticeInfo[] end_GetAllNoticeByType(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __GetAllNoticeByType_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            es.upm.fi.rmi.NoticeInfo[] ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = es.upm.fi.rmi.NoticeInfoSeqHelper.read(is__);
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetAllNoticeByType> begin_GetAllNoticeByType(long sid, byte noticeType, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__GetAllNoticeByType_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetAllNoticeByType> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetAllNoticeByType>(__GetAllNoticeByType_name, GetAllNoticeByType_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__GetAllNoticeByType_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            os__.writeByte(noticeType);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void GetAllNoticeByType_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_GetAllNoticeByType cb__, Ice.ExceptionCallback excb__)
                    {
                        es.upm.fi.rmi.NoticeInfo[] ret__;
                        try
                        {
                            ret__ = end_GetAllNoticeByType(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> begin_GetOnlineUserList()
                    {
                        return begin_GetOnlineUserList(null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> begin_GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_GetOnlineUserList(ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_GetOnlineUserList(Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetOnlineUserList(null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetOnlineUserList(ctx__, true, false, cb__, cookie__);
                    }

                    private const string __GetOnlineUserList_name = "GetOnlineUserList";

                    public string[] end_GetOnlineUserList(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __GetOnlineUserList_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(es.upm.fi.rmi.PaseoException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            string[] ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = es.upm.fi.rmi.OnlineUserSeqHelper.read(is__);
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> begin_GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__GetOnlineUserList_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList>(__GetOnlineUserList_name, GetOnlineUserList_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__GetOnlineUserList_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            result__.writeEmptyParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void GetOnlineUserList_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList cb__, Ice.ExceptionCallback excb__)
                    {
                        string[] ret__;
                        try
                        {
                            ret__ = end_GetOnlineUserList(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetSameChannelIdlePlayers> begin_GetSameChannelIdlePlayers(long sid)
                    {
                        return begin_GetSameChannelIdlePlayers(sid, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetSameChannelIdlePlayers> begin_GetSameChannelIdlePlayers(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_GetSameChannelIdlePlayers(sid, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_GetSameChannelIdlePlayers(long sid, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetSameChannelIdlePlayers(sid, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_GetSameChannelIdlePlayers(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetSameChannelIdlePlayers(sid, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __GetSameChannelIdlePlayers_name = "GetSameChannelIdlePlayers";

                    public es.upm.fi.rmi.CharacterProfile[] end_GetSameChannelIdlePlayers(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __GetSameChannelIdlePlayers_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(es.upm.fi.rmi.PaseoException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            es.upm.fi.rmi.CharacterProfile[] ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = es.upm.fi.rmi.CharacterSeqHelper.read(is__);
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetSameChannelIdlePlayers> begin_GetSameChannelIdlePlayers(long sid, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__GetSameChannelIdlePlayers_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetSameChannelIdlePlayers> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetSameChannelIdlePlayers>(__GetSameChannelIdlePlayers_name, GetSameChannelIdlePlayers_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__GetSameChannelIdlePlayers_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void GetSameChannelIdlePlayers_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_GetSameChannelIdlePlayers cb__, Ice.ExceptionCallback excb__)
                    {
                        es.upm.fi.rmi.CharacterProfile[] ret__;
                        try
                        {
                            ret__ = end_GetSameChannelIdlePlayers(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_JoinChannel> begin_JoinChannel(long sid, long channelId)
                    {
                        return begin_JoinChannel(sid, channelId, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_JoinChannel> begin_JoinChannel(long sid, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_JoinChannel(sid, channelId, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_JoinChannel(long sid, long channelId, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_JoinChannel(sid, channelId, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_JoinChannel(long sid, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_JoinChannel(sid, channelId, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __JoinChannel_name = "JoinChannel";

                    public es.upm.fi.rmi.ChannelInfo end_JoinChannel(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __JoinChannel_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(es.upm.fi.rmi.PaseoException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            es.upm.fi.rmi.ChannelInfo ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = new es.upm.fi.rmi.ChannelInfo();
                            ret__.read__(is__);
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_JoinChannel> begin_JoinChannel(long sid, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__JoinChannel_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_JoinChannel> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_JoinChannel>(__JoinChannel_name, JoinChannel_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__JoinChannel_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            os__.writeLong(channelId);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void JoinChannel_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_JoinChannel cb__, Ice.ExceptionCallback excb__)
                    {
                        es.upm.fi.rmi.ChannelInfo ret__;
                        try
                        {
                            ret__ = end_JoinChannel(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message)
                    {
                        return begin_SendChatMessage(sid, scopeId, senderSid, receiverName, message, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_SendChatMessage(sid, scopeId, senderSid, receiverName, message, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_SendChatMessage(sid, scopeId, senderSid, receiverName, message, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_SendChatMessage(sid, scopeId, senderSid, receiverName, message, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __SendChatMessage_name = "SendChatMessage";

                    public void end_SendChatMessage(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __SendChatMessage_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(es.upm.fi.rmi.PaseoException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            outAsync__.readEmptyParams();
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__SendChatMessage_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_SendChatMessage>(__SendChatMessage_name, SendChatMessage_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__SendChatMessage_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            os__.writeByte(scopeId);
                            os__.writeLong(senderSid);
                            os__.writeString(receiverName);
                            os__.writeString(message);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void SendChatMessage_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_SendChatMessage cb__, Ice.ExceptionCallback excb__)
                    {
                        try
                        {
                            end_SendChatMessage(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__();
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendInformation> begin_SendInformation(long sid, es.upm.fi.rmi.InformationInfo info)
                    {
                        return begin_SendInformation(sid, info, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendInformation> begin_SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_SendInformation(sid, info, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_SendInformation(sid, info, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_SendInformation(sid, info, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __SendInformation_name = "SendInformation";

                    public bool end_SendInformation(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __SendInformation_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            bool ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = is__.readBool();
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendInformation> begin_SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__SendInformation_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_SendInformation> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_SendInformation>(__SendInformation_name, SendInformation_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__SendInformation_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            es.upm.fi.rmi.InformationInfo.write__(os__, info);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void SendInformation_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_SendInformation cb__, Ice.ExceptionCallback excb__)
                    {
                        bool ret__;
                        try
                        {
                            ret__ = end_SendInformation(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendNotice> begin_SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info)
                    {
                        return begin_SendNotice(sid, info, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendNotice> begin_SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_SendNotice(sid, info, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_SendNotice(sid, info, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_SendNotice(sid, info, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __SendNotice_name = "SendNotice";

                    public bool end_SendNotice(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __SendNotice_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            bool ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = is__.readBool();
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendNotice> begin_SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__SendNotice_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_SendNotice> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_SendNotice>(__SendNotice_name, SendNotice_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__SendNotice_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            es.upm.fi.rmi.NoticeInfo.write__(os__, info);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void SendNotice_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_SendNotice cb__, Ice.ExceptionCallback excb__)
                    {
                        bool ret__;
                        try
                        {
                            ret__ = end_SendNotice(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    #endregion

                    #region Checked and unchecked cast operations

                    public static ChatServicePrx checkedCast(Ice.ObjectPrx b)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        ChatServicePrx r = b as ChatServicePrx;
                        if((r == null) && b.ice_isA(ice_staticId()))
                        {
                            ChatServicePrxHelper h = new ChatServicePrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static ChatServicePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        ChatServicePrx r = b as ChatServicePrx;
                        if((r == null) && b.ice_isA(ice_staticId(), ctx))
                        {
                            ChatServicePrxHelper h = new ChatServicePrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static ChatServicePrx checkedCast(Ice.ObjectPrx b, string f)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        try
                        {
                            if(bb.ice_isA(ice_staticId()))
                            {
                                ChatServicePrxHelper h = new ChatServicePrxHelper();
                                h.copyFrom__(bb);
                                return h;
                            }
                        }
                        catch(Ice.FacetNotExistException)
                        {
                        }
                        return null;
                    }

                    public static ChatServicePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        try
                        {
                            if(bb.ice_isA(ice_staticId(), ctx))
                            {
                                ChatServicePrxHelper h = new ChatServicePrxHelper();
                                h.copyFrom__(bb);
                                return h;
                            }
                        }
                        catch(Ice.FacetNotExistException)
                        {
                        }
                        return null;
                    }

                    public static ChatServicePrx uncheckedCast(Ice.ObjectPrx b)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        ChatServicePrx r = b as ChatServicePrx;
                        if(r == null)
                        {
                            ChatServicePrxHelper h = new ChatServicePrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static ChatServicePrx uncheckedCast(Ice.ObjectPrx b, string f)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        ChatServicePrxHelper h = new ChatServicePrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }

                    public static readonly string[] ids__ =
                    {
                        "::Ice::Object",
                        "::es::upm::fi::rmi::ChatService"
                    };

                    public static string ice_staticId()
                    {
                        return ids__[1];
                    }

                    #endregion

                    #region Marshaling support

                    public static void write__(IceInternal.BasicStream os__, ChatServicePrx v__)
                    {
                        os__.writeProxy(v__);
                    }

                    public static ChatServicePrx read__(IceInternal.BasicStream is__)
                    {
                        Ice.ObjectPrx proxy = is__.readProxy();
                        if(proxy != null)
                        {
                            ChatServicePrxHelper result = new ChatServicePrxHelper();
                            result.copyFrom__(proxy);
                            return result;
                        }
                        return null;
                    }

                    #endregion
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public abstract class ChatServiceDisp_ : Ice.ObjectImpl, ChatService
                {
                    #region Slice operations

                    public void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message)
                    {
                        SendChatMessage(sid, scopeId, senderSid, receiverName, message, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, Ice.Current current__);

                    public es.upm.fi.rmi.ChannelInfo JoinChannel(long sid, long channelId)
                    {
                        return JoinChannel(sid, channelId, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract es.upm.fi.rmi.ChannelInfo JoinChannel(long sid, long channelId, Ice.Current current__);

                    public es.upm.fi.rmi.ChannelInfo[] GetAllChannel(long sid)
                    {
                        return GetAllChannel(sid, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract es.upm.fi.rmi.ChannelInfo[] GetAllChannel(long sid, Ice.Current current__);

                    public bool SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info)
                    {
                        return SendNotice(sid, info, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract bool SendNotice(long sid, es.upm.fi.rmi.NoticeInfo info, Ice.Current current__);

                    public es.upm.fi.rmi.NoticeInfo[] GetAllNoticeByType(long sid, byte noticeType)
                    {
                        return GetAllNoticeByType(sid, noticeType, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract es.upm.fi.rmi.NoticeInfo[] GetAllNoticeByType(long sid, byte noticeType, Ice.Current current__);

                    public bool DelNotice(long sid, int noticeId, byte noticeType)
                    {
                        return DelNotice(sid, noticeId, noticeType, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract bool DelNotice(long sid, int noticeId, byte noticeType, Ice.Current current__);

                    public bool SendInformation(long sid, es.upm.fi.rmi.InformationInfo info)
                    {
                        return SendInformation(sid, info, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract bool SendInformation(long sid, es.upm.fi.rmi.InformationInfo info, Ice.Current current__);

                    public es.upm.fi.rmi.InformationInfo[] GetAllInformation(long sid)
                    {
                        return GetAllInformation(sid, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract es.upm.fi.rmi.InformationInfo[] GetAllInformation(long sid, Ice.Current current__);

                    public bool DelInformation(long sid, int informationId)
                    {
                        return DelInformation(sid, informationId, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract bool DelInformation(long sid, int informationId, Ice.Current current__);

                    public es.upm.fi.rmi.CharacterProfile[] GetSameChannelIdlePlayers(long sid)
                    {
                        return GetSameChannelIdlePlayers(sid, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract es.upm.fi.rmi.CharacterProfile[] GetSameChannelIdlePlayers(long sid, Ice.Current current__);

                    public string[] GetOnlineUserList()
                    {
                        return GetOnlineUserList(Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract string[] GetOnlineUserList(Ice.Current current__);

                    #endregion

                    #region Slice type-related members

                    public static new readonly string[] ids__ = 
                    {
                        "::Ice::Object",
                        "::es::upm::fi::rmi::ChatService"
                    };

                    public override bool ice_isA(string s)
                    {
                        return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                    }

                    public override bool ice_isA(string s, Ice.Current current__)
                    {
                        return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                    }

                    public override string[] ice_ids()
                    {
                        return ids__;
                    }

                    public override string[] ice_ids(Ice.Current current__)
                    {
                        return ids__;
                    }

                    public override string ice_id()
                    {
                        return ids__[1];
                    }

                    public override string ice_id(Ice.Current current__)
                    {
                        return ids__[1];
                    }

                    public static new string ice_staticId()
                    {
                        return ids__[1];
                    }

                    #endregion

                    #region Operation dispatch

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus SendChatMessage___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        byte scopeId;
                        long senderSid;
                        string receiverName;
                        string message;
                        sid = is__.readLong();
                        scopeId = is__.readByte();
                        senderSid = is__.readLong();
                        receiverName = is__.readString();
                        message = is__.readString();
                        inS__.endReadParams();
                        try
                        {
                            obj__.SendChatMessage(sid, scopeId, senderSid, receiverName, message, current__);
                            inS__.writeEmptyParams__();
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(es.upm.fi.rmi.PaseoException ex__)
                        {
                            inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus JoinChannel___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        long channelId;
                        sid = is__.readLong();
                        channelId = is__.readLong();
                        inS__.endReadParams();
                        try
                        {
                            es.upm.fi.rmi.ChannelInfo ret__ = obj__.JoinChannel(sid, channelId, current__);
                            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                            ret__.write__(os__);
                            inS__.endWriteParams__(true);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(es.upm.fi.rmi.PaseoException ex__)
                        {
                            inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus GetAllChannel___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        sid = is__.readLong();
                        inS__.endReadParams();
                        es.upm.fi.rmi.ChannelInfo[] ret__ = obj__.GetAllChannel(sid, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        es.upm.fi.rmi.ChannelSeqHelper.write(os__, ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus SendNotice___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        es.upm.fi.rmi.NoticeInfo info;
                        info = null;
                        sid = is__.readLong();
                        info = es.upm.fi.rmi.NoticeInfo.read__(is__, info);
                        inS__.endReadParams();
                        bool ret__ = obj__.SendNotice(sid, info, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeBool(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus GetAllNoticeByType___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        byte noticeType;
                        sid = is__.readLong();
                        noticeType = is__.readByte();
                        inS__.endReadParams();
                        es.upm.fi.rmi.NoticeInfo[] ret__ = obj__.GetAllNoticeByType(sid, noticeType, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        es.upm.fi.rmi.NoticeInfoSeqHelper.write(os__, ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus DelNotice___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        int noticeId;
                        byte noticeType;
                        sid = is__.readLong();
                        noticeId = is__.readInt();
                        noticeType = is__.readByte();
                        inS__.endReadParams();
                        bool ret__ = obj__.DelNotice(sid, noticeId, noticeType, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeBool(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus SendInformation___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        es.upm.fi.rmi.InformationInfo info;
                        info = null;
                        sid = is__.readLong();
                        info = es.upm.fi.rmi.InformationInfo.read__(is__, info);
                        inS__.endReadParams();
                        bool ret__ = obj__.SendInformation(sid, info, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeBool(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus GetAllInformation___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        sid = is__.readLong();
                        inS__.endReadParams();
                        es.upm.fi.rmi.InformationInfo[] ret__ = obj__.GetAllInformation(sid, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        es.upm.fi.rmi.InformationInfoSeqHelper.write(os__, ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus DelInformation___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        int informationId;
                        sid = is__.readLong();
                        informationId = is__.readInt();
                        inS__.endReadParams();
                        bool ret__ = obj__.DelInformation(sid, informationId, current__);
                        IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                        os__.writeBool(ret__);
                        inS__.endWriteParams__(true);
                        return Ice.DispatchStatus.DispatchOK;
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus GetSameChannelIdlePlayers___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        sid = is__.readLong();
                        inS__.endReadParams();
                        try
                        {
                            es.upm.fi.rmi.CharacterProfile[] ret__ = obj__.GetSameChannelIdlePlayers(sid, current__);
                            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                            es.upm.fi.rmi.CharacterSeqHelper.write(os__, ret__);
                            inS__.endWriteParams__(true);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(es.upm.fi.rmi.PaseoException ex__)
                        {
                            inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus GetOnlineUserList___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        inS__.readEmptyParams();
                        try
                        {
                            string[] ret__ = obj__.GetOnlineUserList(current__);
                            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                            es.upm.fi.rmi.OnlineUserSeqHelper.write(os__, ret__);
                            inS__.endWriteParams__(true);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(es.upm.fi.rmi.PaseoException ex__)
                        {
                            inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    }

                    private static string[] all__ =
                    {
                        "DelInformation",
                        "DelNotice",
                        "GetAllChannel",
                        "GetAllInformation",
                        "GetAllNoticeByType",
                        "GetOnlineUserList",
                        "GetSameChannelIdlePlayers",
                        "JoinChannel",
                        "SendChatMessage",
                        "SendInformation",
                        "SendNotice",
                        "ice_id",
                        "ice_ids",
                        "ice_isA",
                        "ice_ping"
                    };

                    public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                        if(pos < 0)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }

                        switch(pos)
                        {
                            case 0:
                            {
                                return DelInformation___(this, inS__, current__);
                            }
                            case 1:
                            {
                                return DelNotice___(this, inS__, current__);
                            }
                            case 2:
                            {
                                return GetAllChannel___(this, inS__, current__);
                            }
                            case 3:
                            {
                                return GetAllInformation___(this, inS__, current__);
                            }
                            case 4:
                            {
                                return GetAllNoticeByType___(this, inS__, current__);
                            }
                            case 5:
                            {
                                return GetOnlineUserList___(this, inS__, current__);
                            }
                            case 6:
                            {
                                return GetSameChannelIdlePlayers___(this, inS__, current__);
                            }
                            case 7:
                            {
                                return JoinChannel___(this, inS__, current__);
                            }
                            case 8:
                            {
                                return SendChatMessage___(this, inS__, current__);
                            }
                            case 9:
                            {
                                return SendInformation___(this, inS__, current__);
                            }
                            case 10:
                            {
                                return SendNotice___(this, inS__, current__);
                            }
                            case 11:
                            {
                                return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                            }
                            case 12:
                            {
                                return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                            }
                            case 13:
                            {
                                return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                            }
                            case 14:
                            {
                                return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                            }
                        }

                        _System.Diagnostics.Debug.Assert(false);
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    #endregion

                    #region Marshaling support

                    protected override void writeImpl__(IceInternal.BasicStream os__)
                    {
                        os__.startWriteSlice(ice_staticId(), -1, true);
                        os__.endWriteSlice();
                    }

                    protected override void readImpl__(IceInternal.BasicStream is__)
                    {
                        is__.startReadSlice();
                        is__.endReadSlice();
                    }

                    #endregion
                }
            }
        }
    }
}
