// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `ChatService.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1032")]
#if !SILVERLIGHT
                [_System.Serializable]
#endif
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
                public partial class ChatException : es.upm.fi.rmi.PaseoException
                {
                    #region Constructors

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChatException()
                    {
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChatException(_System.Exception ex__) : base(ex__)
                    {
                    }
#if !SILVERLIGHT

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public ChatException(_System.Runtime.Serialization.SerializationInfo info__, _System.Runtime.Serialization.StreamingContext context__) : base(info__, context__)
                    {
                    }
#endif

                    #endregion

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override string ice_name()
                    {
                        return "es::upm::fi::rmi::ChatException";
                    }

                    #region Object members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override int GetHashCode()
                    {
                        int h__ = base.GetHashCode();
                        IceInternal.HashUtil.hashAdd(ref h__, "::es::upm::fi::rmi::ChatException");
                        return h__;
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public override bool Equals(object other__)
                    {
                        if(other__ == null)
                        {
                            return false;
                        }
                        if(object.ReferenceEquals(this, other__))
                        {
                            return true;
                        }
                        ChatException o__ = other__ as ChatException;
                        if(o__ == null)
                        {
                            return false;
                        }
                        if(!base.Equals(other__))
                        {
                            return false;
                        }
                        return true;
                    }

                    #endregion

                    #region Comparison members

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator==(ChatException lhs__, ChatException rhs__)
                    {
                        return Equals(lhs__, rhs__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    public static bool operator!=(ChatException lhs__, ChatException rhs__)
                    {
                        return !Equals(lhs__, rhs__);
                    }

                    #endregion

                    #region Marshaling support

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void writeImpl__(IceInternal.BasicStream os__)
                    {
                        os__.startWriteSlice("::es::upm::fi::rmi::ChatException", -1, false);
                        os__.endWriteSlice();
                        base.writeImpl__(os__);
                    }

                    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                    protected override void readImpl__(IceInternal.BasicStream is__)
                    {
                        is__.startReadSlice();
                        is__.endReadSlice();
                        base.readImpl__(is__);
                    }

                    #endregion
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
                public partial interface ChatService : Ice.Object, ChatServiceOperations_, ChatServiceOperationsNC_
                {
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_SendChatMessage();

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_ChatService_GetOnlineUserList(string[] ret__);
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface ChatServicePrx : Ice.ObjectPrx
                {
                    void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message);

                    void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    void end_SendChatMessage(Ice.AsyncResult r__);

                    string[] GetOnlineUserList();

                    string[] GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> begin_GetOnlineUserList();

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> begin_GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_GetOnlineUserList(Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    string[] end_GetOnlineUserList(Ice.AsyncResult r__);
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface ChatServiceOperations_
                {
                    void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, Ice.Current current__);

                    string[] GetOnlineUserList(Ice.Current current__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface ChatServiceOperationsNC_
                {
                    void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message);

                    string[] GetOnlineUserList();
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public sealed class OnlineUserSeqHelper
                {
                    public static void write(IceInternal.BasicStream os__, string[] v__)
                    {
                        os__.writeStringSeq(v__);
                    }

                    public static string[] read(IceInternal.BasicStream is__)
                    {
                        string[] v__;
                        v__ = is__.readStringSeq();
                        return v__;
                    }
                }

                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public sealed class ChatServicePrxHelper : Ice.ObjectPrxHelperBase, ChatServicePrx
                {
                    #region Synchronous operations

                    public string[] GetOnlineUserList()
                    {
                        return this.GetOnlineUserList(null, false);
                    }

                    public string[] GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return this.GetOnlineUserList(ctx__, true);
                    }

                    private string[] GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__GetOnlineUserList_name);
                        return end_GetOnlineUserList(begin_GetOnlineUserList(context__, explicitCtx__, true, null, null));
                    }

                    public void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message)
                    {
                        this.SendChatMessage(sid, scopeId, senderSid, receiverName, message, null, false);
                    }

                    public void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        this.SendChatMessage(sid, scopeId, senderSid, receiverName, message, ctx__, true);
                    }

                    private void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        checkTwowayOnly__(__SendChatMessage_name);
                        end_SendChatMessage(begin_SendChatMessage(sid, scopeId, senderSid, receiverName, message, context__, explicitCtx__, true, null, null));
                    }

                    #endregion

                    #region Asynchronous operations

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> begin_GetOnlineUserList()
                    {
                        return begin_GetOnlineUserList(null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> begin_GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_GetOnlineUserList(ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_GetOnlineUserList(Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetOnlineUserList(null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_GetOnlineUserList(ctx__, true, false, cb__, cookie__);
                    }

                    private const string __GetOnlineUserList_name = "GetOnlineUserList";

                    public string[] end_GetOnlineUserList(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __GetOnlineUserList_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(es.upm.fi.rmi.PaseoException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            string[] ret__;
                            IceInternal.BasicStream is__ = outAsync__.startReadParams();
                            ret__ = es.upm.fi.rmi.OnlineUserSeqHelper.read(is__);
                            outAsync__.endReadParams();
                            return ret__;
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> begin_GetOnlineUserList(_System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__GetOnlineUserList_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList>(__GetOnlineUserList_name, GetOnlineUserList_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__GetOnlineUserList_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            result__.writeEmptyParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void GetOnlineUserList_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_GetOnlineUserList cb__, Ice.ExceptionCallback excb__)
                    {
                        string[] ret__;
                        try
                        {
                            ret__ = end_GetOnlineUserList(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__(ret__);
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message)
                    {
                        return begin_SendChatMessage(sid, scopeId, senderSid, receiverName, message, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_SendChatMessage(sid, scopeId, senderSid, receiverName, message, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_SendChatMessage(sid, scopeId, senderSid, receiverName, message, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_SendChatMessage(sid, scopeId, senderSid, receiverName, message, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __SendChatMessage_name = "SendChatMessage";

                    public void end_SendChatMessage(Ice.AsyncResult r__)
                    {
                        IceInternal.OutgoingAsync outAsync__ = IceInternal.OutgoingAsync.check(r__, this, __SendChatMessage_name);
                        try
                        {
                            if(!outAsync__.wait())
                            {
                                try
                                {
                                    outAsync__.throwUserException();
                                }
                                catch(es.upm.fi.rmi.PaseoException)
                                {
                                    throw;
                                }
                                catch(Ice.UserException ex__)
                                {
                                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                                }
                            }
                            outAsync__.readEmptyParams();
                        }
                        finally
                        {
                            outAsync__.cacheMessageBuffers();
                        }
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> begin_SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        checkAsyncTwowayOnly__(__SendChatMessage_name);
                        IceInternal.TwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_SendChatMessage> result__ =  getTwowayOutgoingAsync<es.upm.fi.rmi.Callback_ChatService_SendChatMessage>(__SendChatMessage_name, SendChatMessage_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__SendChatMessage_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            os__.writeByte(scopeId);
                            os__.writeLong(senderSid);
                            os__.writeString(receiverName);
                            os__.writeString(message);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void SendChatMessage_completed__(Ice.AsyncResult r__, es.upm.fi.rmi.Callback_ChatService_SendChatMessage cb__, Ice.ExceptionCallback excb__)
                    {
                        try
                        {
                            end_SendChatMessage(r__);
                        }
                        catch(Ice.Exception ex__)
                        {
                            if(excb__ != null)
                            {
                                excb__(ex__);
                            }
                            return;
                        }
                        if(cb__ != null)
                        {
                            cb__();
                        }
                    }

                    #endregion

                    #region Checked and unchecked cast operations

                    public static ChatServicePrx checkedCast(Ice.ObjectPrx b)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        ChatServicePrx r = b as ChatServicePrx;
                        if((r == null) && b.ice_isA(ice_staticId()))
                        {
                            ChatServicePrxHelper h = new ChatServicePrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static ChatServicePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        ChatServicePrx r = b as ChatServicePrx;
                        if((r == null) && b.ice_isA(ice_staticId(), ctx))
                        {
                            ChatServicePrxHelper h = new ChatServicePrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static ChatServicePrx checkedCast(Ice.ObjectPrx b, string f)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        try
                        {
                            if(bb.ice_isA(ice_staticId()))
                            {
                                ChatServicePrxHelper h = new ChatServicePrxHelper();
                                h.copyFrom__(bb);
                                return h;
                            }
                        }
                        catch(Ice.FacetNotExistException)
                        {
                        }
                        return null;
                    }

                    public static ChatServicePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        try
                        {
                            if(bb.ice_isA(ice_staticId(), ctx))
                            {
                                ChatServicePrxHelper h = new ChatServicePrxHelper();
                                h.copyFrom__(bb);
                                return h;
                            }
                        }
                        catch(Ice.FacetNotExistException)
                        {
                        }
                        return null;
                    }

                    public static ChatServicePrx uncheckedCast(Ice.ObjectPrx b)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        ChatServicePrx r = b as ChatServicePrx;
                        if(r == null)
                        {
                            ChatServicePrxHelper h = new ChatServicePrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static ChatServicePrx uncheckedCast(Ice.ObjectPrx b, string f)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        ChatServicePrxHelper h = new ChatServicePrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }

                    public static readonly string[] ids__ =
                    {
                        "::Ice::Object",
                        "::es::upm::fi::rmi::ChatService"
                    };

                    public static string ice_staticId()
                    {
                        return ids__[1];
                    }

                    #endregion

                    #region Marshaling support

                    public static void write__(IceInternal.BasicStream os__, ChatServicePrx v__)
                    {
                        os__.writeProxy(v__);
                    }

                    public static ChatServicePrx read__(IceInternal.BasicStream is__)
                    {
                        Ice.ObjectPrx proxy = is__.readProxy();
                        if(proxy != null)
                        {
                            ChatServicePrxHelper result = new ChatServicePrxHelper();
                            result.copyFrom__(proxy);
                            return result;
                        }
                        return null;
                    }

                    #endregion
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public abstract class ChatServiceDisp_ : Ice.ObjectImpl, ChatService
                {
                    #region Slice operations

                    public void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message)
                    {
                        SendChatMessage(sid, scopeId, senderSid, receiverName, message, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract void SendChatMessage(long sid, byte scopeId, long senderSid, string receiverName, string message, Ice.Current current__);

                    public string[] GetOnlineUserList()
                    {
                        return GetOnlineUserList(Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract string[] GetOnlineUserList(Ice.Current current__);

                    #endregion

                    #region Slice type-related members

                    public static new readonly string[] ids__ = 
                    {
                        "::Ice::Object",
                        "::es::upm::fi::rmi::ChatService"
                    };

                    public override bool ice_isA(string s)
                    {
                        return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                    }

                    public override bool ice_isA(string s, Ice.Current current__)
                    {
                        return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                    }

                    public override string[] ice_ids()
                    {
                        return ids__;
                    }

                    public override string[] ice_ids(Ice.Current current__)
                    {
                        return ids__;
                    }

                    public override string ice_id()
                    {
                        return ids__[1];
                    }

                    public override string ice_id(Ice.Current current__)
                    {
                        return ids__[1];
                    }

                    public static new string ice_staticId()
                    {
                        return ids__[1];
                    }

                    #endregion

                    #region Operation dispatch

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus SendChatMessage___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        byte scopeId;
                        long senderSid;
                        string receiverName;
                        string message;
                        sid = is__.readLong();
                        scopeId = is__.readByte();
                        senderSid = is__.readLong();
                        receiverName = is__.readString();
                        message = is__.readString();
                        inS__.endReadParams();
                        try
                        {
                            obj__.SendChatMessage(sid, scopeId, senderSid, receiverName, message, current__);
                            inS__.writeEmptyParams__();
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(es.upm.fi.rmi.PaseoException ex__)
                        {
                            inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus GetOnlineUserList___(ChatService obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        inS__.readEmptyParams();
                        try
                        {
                            string[] ret__ = obj__.GetOnlineUserList(current__);
                            IceInternal.BasicStream os__ = inS__.startWriteParams__(Ice.FormatType.DefaultFormat);
                            es.upm.fi.rmi.OnlineUserSeqHelper.write(os__, ret__);
                            inS__.endWriteParams__(true);
                            return Ice.DispatchStatus.DispatchOK;
                        }
                        catch(es.upm.fi.rmi.PaseoException ex__)
                        {
                            inS__.writeUserException__(ex__, Ice.FormatType.DefaultFormat);
                            return Ice.DispatchStatus.DispatchUserException;
                        }
                    }

                    private static string[] all__ =
                    {
                        "GetOnlineUserList",
                        "SendChatMessage",
                        "ice_id",
                        "ice_ids",
                        "ice_isA",
                        "ice_ping"
                    };

                    public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                        if(pos < 0)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }

                        switch(pos)
                        {
                            case 0:
                            {
                                return GetOnlineUserList___(this, inS__, current__);
                            }
                            case 1:
                            {
                                return SendChatMessage___(this, inS__, current__);
                            }
                            case 2:
                            {
                                return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                            }
                            case 3:
                            {
                                return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                            }
                            case 4:
                            {
                                return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                            }
                            case 5:
                            {
                                return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                            }
                        }

                        _System.Diagnostics.Debug.Assert(false);
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    #endregion

                    #region Marshaling support

                    protected override void writeImpl__(IceInternal.BasicStream os__)
                    {
                        os__.startWriteSlice(ice_staticId(), -1, true);
                        os__.endWriteSlice();
                    }

                    protected override void readImpl__(IceInternal.BasicStream is__)
                    {
                        is__.startReadSlice();
                        is__.endReadSlice();
                    }

                    #endregion
                }
            }
        }
    }
}
