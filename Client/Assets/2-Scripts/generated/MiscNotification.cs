// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `MiscNotification.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace IceCompactId
{
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
                [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
                public partial interface MiscNotification : Ice.Object, MiscNotificationOperations_, MiscNotificationOperationsNC_, es.upm.fi.rmi.NotificationBase
                {
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_MiscNotification_OnFirstNotification();

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public delegate void Callback_MiscNotification_OnChannelCreated();
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface MiscNotificationPrx : es.upm.fi.rmi.NotificationBasePrx
                {
                    void OnFirstNotification(long sid, string acc);

                    void OnFirstNotification(long sid, string acc, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_MiscNotification_OnFirstNotification> begin_OnFirstNotification(long sid, string acc);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_MiscNotification_OnFirstNotification> begin_OnFirstNotification(long sid, string acc, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_OnFirstNotification(long sid, string acc, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_OnFirstNotification(long sid, string acc, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    void end_OnFirstNotification(Ice.AsyncResult r__);

                    void OnChannelCreated(long sid, int charaid, int uniqueId, long channelId);

                    void OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_MiscNotification_OnChannelCreated> begin_OnChannelCreated(long sid, int charaid, int uniqueId, long channelId);

                    Ice.AsyncResult<es.upm.fi.rmi.Callback_MiscNotification_OnChannelCreated> begin_OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__);

                    Ice.AsyncResult begin_OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, Ice.AsyncCallback cb__, object cookie__);

                    Ice.AsyncResult begin_OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

                    void end_OnChannelCreated(Ice.AsyncResult r__);
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface MiscNotificationOperations_ : es.upm.fi.rmi.NotificationBaseOperations_
                {
                    void OnFirstNotification(long sid, string acc, Ice.Current current__);

                    void OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, Ice.Current current__);
                }

                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public interface MiscNotificationOperationsNC_ : es.upm.fi.rmi.NotificationBaseOperationsNC_
                {
                    void OnFirstNotification(long sid, string acc);

                    void OnChannelCreated(long sid, int charaid, int uniqueId, long channelId);
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public sealed class MiscNotificationPrxHelper : Ice.ObjectPrxHelperBase, MiscNotificationPrx
                {
                    #region Synchronous operations

                    public void OnChannelCreated(long sid, int charaid, int uniqueId, long channelId)
                    {
                        this.OnChannelCreated(sid, charaid, uniqueId, channelId, null, false);
                    }

                    public void OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        this.OnChannelCreated(sid, charaid, uniqueId, channelId, ctx__, true);
                    }

                    private void OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        end_OnChannelCreated(begin_OnChannelCreated(sid, charaid, uniqueId, channelId, context__, explicitCtx__, true, null, null));
                    }

                    public void OnFirstNotification(long sid, string acc)
                    {
                        this.OnFirstNotification(sid, acc, null, false);
                    }

                    public void OnFirstNotification(long sid, string acc, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        this.OnFirstNotification(sid, acc, ctx__, true);
                    }

                    private void OnFirstNotification(long sid, string acc, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitCtx__)
                    {
                        end_OnFirstNotification(begin_OnFirstNotification(sid, acc, context__, explicitCtx__, true, null, null));
                    }

                    #endregion

                    #region Asynchronous operations

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_MiscNotification_OnChannelCreated> begin_OnChannelCreated(long sid, int charaid, int uniqueId, long channelId)
                    {
                        return begin_OnChannelCreated(sid, charaid, uniqueId, channelId, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_MiscNotification_OnChannelCreated> begin_OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_OnChannelCreated(sid, charaid, uniqueId, channelId, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_OnChannelCreated(sid, charaid, uniqueId, channelId, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_OnChannelCreated(sid, charaid, uniqueId, channelId, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __OnChannelCreated_name = "OnChannelCreated";

                    public void end_OnChannelCreated(Ice.AsyncResult r__)
                    {
                        end__(r__, __OnChannelCreated_name);
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_MiscNotification_OnChannelCreated> begin_OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        IceInternal.OnewayOutgoingAsync<es.upm.fi.rmi.Callback_MiscNotification_OnChannelCreated> result__ = getOnewayOutgoingAsync<es.upm.fi.rmi.Callback_MiscNotification_OnChannelCreated>(__OnChannelCreated_name, OnChannelCreated_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__OnChannelCreated_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            os__.writeInt(charaid);
                            os__.writeInt(uniqueId);
                            os__.writeLong(channelId);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void OnChannelCreated_completed__(es.upm.fi.rmi.Callback_MiscNotification_OnChannelCreated cb__)
                    {
                        if(cb__ != null)
                        {
                            cb__();
                        }
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_MiscNotification_OnFirstNotification> begin_OnFirstNotification(long sid, string acc)
                    {
                        return begin_OnFirstNotification(sid, acc, null, false, false, null, null);
                    }

                    public Ice.AsyncResult<es.upm.fi.rmi.Callback_MiscNotification_OnFirstNotification> begin_OnFirstNotification(long sid, string acc, _System.Collections.Generic.Dictionary<string, string> ctx__)
                    {
                        return begin_OnFirstNotification(sid, acc, ctx__, true, false, null, null);
                    }

                    public Ice.AsyncResult begin_OnFirstNotification(long sid, string acc, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_OnFirstNotification(sid, acc, null, false, false, cb__, cookie__);
                    }

                    public Ice.AsyncResult begin_OnFirstNotification(long sid, string acc, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        return begin_OnFirstNotification(sid, acc, ctx__, true, false, cb__, cookie__);
                    }

                    private const string __OnFirstNotification_name = "OnFirstNotification";

                    public void end_OnFirstNotification(Ice.AsyncResult r__)
                    {
                        end__(r__, __OnFirstNotification_name);
                    }

                    private Ice.AsyncResult<es.upm.fi.rmi.Callback_MiscNotification_OnFirstNotification> begin_OnFirstNotification(long sid, string acc, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, bool synchronous__, Ice.AsyncCallback cb__, object cookie__)
                    {
                        IceInternal.OnewayOutgoingAsync<es.upm.fi.rmi.Callback_MiscNotification_OnFirstNotification> result__ = getOnewayOutgoingAsync<es.upm.fi.rmi.Callback_MiscNotification_OnFirstNotification>(__OnFirstNotification_name, OnFirstNotification_completed__, cookie__);
                        if(cb__ != null)
                        {
                            result__.whenCompletedWithAsyncCallback(cb__);
                        }
                        try
                        {
                            result__.prepare(__OnFirstNotification_name, Ice.OperationMode.Normal, ctx__, explicitContext__, synchronous__);
                            IceInternal.BasicStream os__ = result__.startWriteParams(Ice.FormatType.DefaultFormat);
                            os__.writeLong(sid);
                            os__.writeString(acc);
                            result__.endWriteParams();
                            result__.invoke();
                        }
                        catch(Ice.Exception ex__)
                        {
                            result__.abort(ex__);
                        }
                        return result__;
                    }

                    private void OnFirstNotification_completed__(es.upm.fi.rmi.Callback_MiscNotification_OnFirstNotification cb__)
                    {
                        if(cb__ != null)
                        {
                            cb__();
                        }
                    }

                    #endregion

                    #region Checked and unchecked cast operations

                    public static MiscNotificationPrx checkedCast(Ice.ObjectPrx b)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        MiscNotificationPrx r = b as MiscNotificationPrx;
                        if((r == null) && b.ice_isA(ice_staticId()))
                        {
                            MiscNotificationPrxHelper h = new MiscNotificationPrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static MiscNotificationPrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        MiscNotificationPrx r = b as MiscNotificationPrx;
                        if((r == null) && b.ice_isA(ice_staticId(), ctx))
                        {
                            MiscNotificationPrxHelper h = new MiscNotificationPrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static MiscNotificationPrx checkedCast(Ice.ObjectPrx b, string f)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        try
                        {
                            if(bb.ice_isA(ice_staticId()))
                            {
                                MiscNotificationPrxHelper h = new MiscNotificationPrxHelper();
                                h.copyFrom__(bb);
                                return h;
                            }
                        }
                        catch(Ice.FacetNotExistException)
                        {
                        }
                        return null;
                    }

                    public static MiscNotificationPrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        try
                        {
                            if(bb.ice_isA(ice_staticId(), ctx))
                            {
                                MiscNotificationPrxHelper h = new MiscNotificationPrxHelper();
                                h.copyFrom__(bb);
                                return h;
                            }
                        }
                        catch(Ice.FacetNotExistException)
                        {
                        }
                        return null;
                    }

                    public static MiscNotificationPrx uncheckedCast(Ice.ObjectPrx b)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        MiscNotificationPrx r = b as MiscNotificationPrx;
                        if(r == null)
                        {
                            MiscNotificationPrxHelper h = new MiscNotificationPrxHelper();
                            h.copyFrom__(b);
                            r = h;
                        }
                        return r;
                    }

                    public static MiscNotificationPrx uncheckedCast(Ice.ObjectPrx b, string f)
                    {
                        if(b == null)
                        {
                            return null;
                        }
                        Ice.ObjectPrx bb = b.ice_facet(f);
                        MiscNotificationPrxHelper h = new MiscNotificationPrxHelper();
                        h.copyFrom__(bb);
                        return h;
                    }

                    public static readonly string[] ids__ =
                    {
                        "::Ice::Object",
                        "::es::upm::fi::rmi::MiscNotification",
                        "::es::upm::fi::rmi::NotificationBase"
                    };

                    public static string ice_staticId()
                    {
                        return ids__[1];
                    }

                    #endregion

                    #region Marshaling support

                    public static void write__(IceInternal.BasicStream os__, MiscNotificationPrx v__)
                    {
                        os__.writeProxy(v__);
                    }

                    public static MiscNotificationPrx read__(IceInternal.BasicStream is__)
                    {
                        Ice.ObjectPrx proxy = is__.readProxy();
                        if(proxy != null)
                        {
                            MiscNotificationPrxHelper result = new MiscNotificationPrxHelper();
                            result.copyFrom__(proxy);
                            return result;
                        }
                        return null;
                    }

                    #endregion
                }
            }
        }
    }
}

namespace es
{
    namespace upm
    {
        namespace fi
        {
            namespace rmi
            {
                [_System.Runtime.InteropServices.ComVisible(false)]
                [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.6.3")]
                public abstract class MiscNotificationDisp_ : Ice.ObjectImpl, MiscNotification
                {
                    #region Slice operations

                    public void OnFirstNotification(long sid, string acc)
                    {
                        OnFirstNotification(sid, acc, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract void OnFirstNotification(long sid, string acc, Ice.Current current__);

                    public void OnChannelCreated(long sid, int charaid, int uniqueId, long channelId)
                    {
                        OnChannelCreated(sid, charaid, uniqueId, channelId, Ice.ObjectImpl.defaultCurrent);
                    }

                    public abstract void OnChannelCreated(long sid, int charaid, int uniqueId, long channelId, Ice.Current current__);

                    #endregion

                    #region Inherited Slice operations

                    #endregion

                    #region Slice type-related members

                    public static new readonly string[] ids__ = 
                    {
                        "::Ice::Object",
                        "::es::upm::fi::rmi::MiscNotification",
                        "::es::upm::fi::rmi::NotificationBase"
                    };

                    public override bool ice_isA(string s)
                    {
                        return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                    }

                    public override bool ice_isA(string s, Ice.Current current__)
                    {
                        return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
                    }

                    public override string[] ice_ids()
                    {
                        return ids__;
                    }

                    public override string[] ice_ids(Ice.Current current__)
                    {
                        return ids__;
                    }

                    public override string ice_id()
                    {
                        return ids__[1];
                    }

                    public override string ice_id(Ice.Current current__)
                    {
                        return ids__[1];
                    }

                    public static new string ice_staticId()
                    {
                        return ids__[1];
                    }

                    #endregion

                    #region Operation dispatch

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus OnFirstNotification___(MiscNotification obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        string acc;
                        sid = is__.readLong();
                        acc = is__.readString();
                        inS__.endReadParams();
                        obj__.OnFirstNotification(sid, acc, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }

                    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
                    public static Ice.DispatchStatus OnChannelCreated___(MiscNotification obj__, IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        Ice.ObjectImpl.checkMode__(Ice.OperationMode.Normal, current__.mode);
                        IceInternal.BasicStream is__ = inS__.startReadParams();
                        long sid;
                        int charaid;
                        int uniqueId;
                        long channelId;
                        sid = is__.readLong();
                        charaid = is__.readInt();
                        uniqueId = is__.readInt();
                        channelId = is__.readLong();
                        inS__.endReadParams();
                        obj__.OnChannelCreated(sid, charaid, uniqueId, channelId, current__);
                        inS__.writeEmptyParams__();
                        return Ice.DispatchStatus.DispatchOK;
                    }

                    private static string[] all__ =
                    {
                        "OnChannelCreated",
                        "OnFirstNotification",
                        "ice_id",
                        "ice_ids",
                        "ice_isA",
                        "ice_ping"
                    };

                    public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
                    {
                        int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
                        if(pos < 0)
                        {
                            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                        }

                        switch(pos)
                        {
                            case 0:
                            {
                                return OnChannelCreated___(this, inS__, current__);
                            }
                            case 1:
                            {
                                return OnFirstNotification___(this, inS__, current__);
                            }
                            case 2:
                            {
                                return Ice.ObjectImpl.ice_id___(this, inS__, current__);
                            }
                            case 3:
                            {
                                return Ice.ObjectImpl.ice_ids___(this, inS__, current__);
                            }
                            case 4:
                            {
                                return Ice.ObjectImpl.ice_isA___(this, inS__, current__);
                            }
                            case 5:
                            {
                                return Ice.ObjectImpl.ice_ping___(this, inS__, current__);
                            }
                        }

                        _System.Diagnostics.Debug.Assert(false);
                        throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
                    }

                    #endregion

                    #region Marshaling support

                    protected override void writeImpl__(IceInternal.BasicStream os__)
                    {
                        os__.startWriteSlice(ice_staticId(), -1, true);
                        os__.endWriteSlice();
                    }

                    protected override void readImpl__(IceInternal.BasicStream is__)
                    {
                        is__.startReadSlice();
                        is__.endReadSlice();
                    }

                    #endregion
                }
            }
        }
    }
}
